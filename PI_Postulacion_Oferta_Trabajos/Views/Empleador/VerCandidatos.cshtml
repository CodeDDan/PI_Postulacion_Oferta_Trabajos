@model PI_Postulacion_Oferta_Trabajos.Models.ViewModel.CandidatosViewModel

@{
    ViewData["Title"] = "Ver Candidatos";
}

<h2 class="my-3"><i class="bi bi-person-bounding-box"></i> Ver Candidatos - @Model.NombreOferta - @Model.ProvinciaOferta - @Model.CiudadOferta</h2>

<div class="row">
    <div class="col-md-3">
        <!-- Filtros para postulantes -->
        <form method="get" class="bg-light p-4 rounded shadow-sm">
            <!-- Campo oculto para ofertaId -->
            <input type="hidden" name="ofertaId" value="@Model.OfertaId" />

            <!-- Filtro por Edad Desde -->
            <div class="form-floating mb-2">
                <input type="number" name="edadDesde" class="form-control" id="edadDesde" placeholder="Ingrese la edad desde">
                <label for="edadDesde" class="form-label">
                    <i class="bi bi-person-fill"></i> Edad Desde
                </label>
            </div>

            <!-- Filtro por Edad Hasta -->
            <div class="form-floating mb-2">
                <input type="number" name="edadHasta" class="form-control" id="edadHasta" placeholder="Ingrese la edad hasta">
                <label for="edadHasta" class="form-label">
                    <i class="bi bi-person-lines-fill"></i> Edad Hasta
                </label>
            </div>

            <!-- Filtro por Género -->
            <div class="form-floating mb-2">
                <select class="form-select" id="genero" name="genero" aria-label="Seleccione un género">
                    <option value="">Seleccione un género</option>
                    <option value="Masculino">Masculino</option>
                    <option value="Femenino">Femenino</option>
                    <option value="Otro">Otro</option>
                </select>
                <label for="genero" class="form-label">
                    <i class="bi bi-gender-ambiguous"></i> Género
                </label>
            </div>

            <!-- Filtro por Estado Civil -->
            <div class="form-floating mb-3">
                <select class="form-select" id="estadoCivil" name="estadoCivil" aria-label="Seleccione un estado civil">
                    <option value="">Seleccione un estado civil</option>
                    <option value="Soltero/a">Soltero/a</option>
                    <option value="Casado/a">Casado/a</option>
                    <option value="Divorciado/a">Divorciado/a</option>
                    <option value="Viudo/a">Viudo/a</option>
                </select>
                <label for="estadoCivil" class="form-label">
                    <i class="bi bi-heart-fill"></i> Estado Civil
                </label>
            </div>

            <!-- Filtro de Provincia -->
            <div class="form-floating mb-2">
                <select class="form-select custom-select" style="font-size: 14px" id="provincia" name="provincia" aria-label="Provincia">
                    <option value="">Seleccione una provincia</option>
                    @foreach (var provincia in ViewBag.Provincias)
                    {
                        <option value="@provincia.ProId">@provincia.ProNombre</option>
                    }
                </select>
                <label for="provincia" class="form-label">
                    <i class="bi bi-globe-americas"></i> Provincia
                </label>
            </div>

            <!-- Filtro de Ciudad -->
            <div class="form-floating mb-2">
                <select class="form-select" style="font-size: 14px" id="ciudad" name="ciudad">
                    <option value="">Seleccione una ciudad</option>
                    @foreach (var ciudad in ViewBag.Ciudades)
                    {
                        <option value="@ciudad.CidId">@ciudad.CidNombre</option>
                    }
                </select>
                <label for="ciudad" class="form-label">
                    <i class="bi bi-geo-alt-fill"></i> Ciudad
                </label>
            </div>

            <!-- Botón de Filtrar -->
            <button type="submit" class="btn btn-custom">
                <i class="bi bi-funnel-fill"></i> Filtrar
            </button>
        </form>
    </div>

    <div class="col-md-9">
        <!-- Candidatos -->
        <div class="row">
            @foreach (var postulacion in Model.Postulaciones)
            {
                var usuario = postulacion.Usu;
                var detalle = usuario.UsuarioDetalles.FirstOrDefault();
                var perfil = usuario.UsuarioPerfils.FirstOrDefault();
                var estadoActual = postulacion.Esp.EspNombre;

                <div class="card mb-3" style="width: 100%;">
                    <div class="card-body">
                        <div class="row">
                            <!-- Primera columna: Foto y botón de ver perfil -->
                            <div class="col-md-3 d-flex flex-column align-items-center">
                                <div class="mb-3">
                                    @if (!string.IsNullOrEmpty(detalle?.UsdFoto))
                                    {
                                        var fotoUrl = Url.Content($"~/fotoPerfil/{detalle.UsdFoto}");
                                        <img src="@fotoUrl" alt="Foto de @usuario.UsuNombre" class="img-thumbnail" style="width: 150px; height: 150px;" />
                                    }
                                    else
                                    {
                                        <i class="bi bi-person-circle" style="font-size:100px"></i> <!-- Ícono por defecto -->
                                    }
                                </div>
                                <a href="@Url.Action("vista_perfil", "Usuario", new { userId = postulacion.UsuarioId })" class="btn btn-outline-dark">Ver Perfil</a>
                            </div>

                            <!-- Segunda columna: Descripciones -->
                            <div class="col-md-6">
                                <h5 class="card-title"><i class="bi bi-person-fill"></i> @usuario.UsuNombre @usuario.UsuApellido</h5>
                                <p class="card-text">
                                    @if (detalle?.UsdFechaNacimiento.HasValue == true)
                                    {
                                        // Obtener el valor de UsdFechaNacimiento
                                        var fechaNacimiento = detalle.UsdFechaNacimiento.Value;

                                        // Calcular la edad
                                        var edad = DateTime.Now.Year - fechaNacimiento.Year;
                                        if (DateTime.Now.DayOfYear < fechaNacimiento.DayOfYear)
                                        {
                                            edad--;
                                        }

                                    <p>Edad: @edad</p>
                                    }
                                    else
                                    {
                                    <p>Edad: Sin especificar</p>
                                    }

                                    @if (!string.IsNullOrEmpty(detalle?.UsdCiudad))
                                    {
                                    <p>Ciudad: @detalle.UsdCiudad</p>
                                    }
                                    else
                                    {
                                    <p>Ciudad: Sin especificar</p>
                                    }

                                    @if (!string.IsNullOrEmpty(detalle?.UsdGenero))
                                    {
                                    <p>Género: @detalle.UsdGenero</p>
                                    }
                                    else
                                    {
                                    <p>Género: Sin especificar</p>
                                    }

                                    @if (perfil?.UspPreferenciaSalarial != null)
                                    {
                                    <p>Preferencia Salarial: @perfil.UspPreferenciaSalarial.Value.ToString("C")</p>
                                    }
                                    else
                                    {
                                    <p>Preferencia Salarial: Sin especificar</p>
                                    }
                                </p>
                            </div>

                            <!-- Tercera columna: Select y estado de la postulación -->
                            <div class="col-md-3 d-flex flex-column">
                                <!-- Formulario para cambiar el estado de la postulación -->
                                <form method="post" action="@Url.Action("CambiarEstado", "Empleador")" class="mb-3 estado-form">
                                    <input type="hidden" name="postulacionId" value="@postulacion.PosId" />
                                    <div class="d-flex flex-column">
                                        <select name="nuevoEstado" class="form-select mb-2 estado-select">
                                            <option value="" selected disabled>Seleccione una opción</option>
                                            @foreach (var estado in Model.EstadosPostulacion)
                                            {
                                                <option value="@estado.EspId">@estado.EspNombre</option>
                                            }
                                        </select>
                                        <button type="submit" class="btn btn-primary confirmar-btn">Cambiar</button>
                                    </div>
                                </form>

                                <!-- Mostrar el estado actual de la postulación -->
                                <div class="text-end mt-auto text-end">
                                    @{
                                        // Determinar la clase del badge basado en el estado actual
                                        string claseBadge;

                                        switch (estadoActual)
                                        {
                                            case "Aceptado":
                                                claseBadge = "bg-success";   // Verde
                                                break;
                                            case "Rechazado":
                                                claseBadge = "bg-danger";    // Rojo
                                                break;
                                            case "En revisión":
                                                claseBadge = "bg-warning";   // Amarillo
                                                break;
                                            case "En evaluación":
                                                claseBadge = "bg-info";     // Azul claro
                                                break;
                                            case "Postulado":
                                                claseBadge = "bg-primary";     // Azul claro
                                                break;
                                            default:
                                                claseBadge = "bg-secondary"; // Gris por defecto
                                                break;
                                        }
                                    }
                                    <h5>
                                        <span class="badge @claseBadge">@estadoActual</span>
                                    </h5>   
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@if (TempData["ErrorMessage"] != null)
{
    <div id="alerta-postulacion" class="alert alert-danger alert-dismissible fade show" role="alert" style="position: fixed; bottom: 20px; right: 20px; z-index: 1000;">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<!--Necesario para los filtros-->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    // JavaScript para habilitar o deshabilitar el botón de envío basado en la selección del estado
    document.querySelectorAll('.estado-form').forEach(function (form) {
        var estadoSelects = form.querySelectorAll('.estado-select');
        var confirmarBtn = form.querySelector('.confirmar-btn');

        // Función para actualizar el estado del botón
        function actualizarEstadoBoton() {
            var todasSeleccionadas = Array.from(estadoSelects).every(select => select.value !== "");
            confirmarBtn.disabled = !todasSeleccionadas;
        }

        // Añadir listeners a los select para actualizar el botón en cada cambio
        estadoSelects.forEach(select => {
            select.addEventListener('change', actualizarEstadoBoton);
        });

        // Inicializar el estado del botón en el momento de cargar la página
        actualizarEstadoBoton();
    });
</script>

<script>
    // Desaparece la notificación después de 5 segundos
    setTimeout(function () {
        var notificacion = document.getElementById('alerta-postulacion');
        if (notificacion) {
            var alert = new bootstrap.Alert(notificacion);
            alert.close();
        }
    }, 5000); // 5000 milisegundos = 5 segundos
</script>

<!--Método de filtro para ciudades-->
<script>
    $(document).ready(function () {
        $('#provincia').change(function () {
            var proId = $(this).val();
            if (proId) {
                $.ajax({
                    url: '@Url.Action("GetCiudades", "Provincias")',
                    type: 'GET',
                    data: { proId: proId },
                    success: function (data) {
                        var $cidId = $('#ciudad');
                        $cidId.empty();
                        $cidId.append('<option value="">Seleccione una ciudad</option>');
                        $.each(data, function (index, item) {
                            $cidId.append($('<option>').val(item.cidId).text(item.cidNombre));
                        });
                    }
                });
            } else {
                $('#ciudad').empty().append('<option value="">Seleccione una ciudad</option>');
            }
        });
    });
</script>
