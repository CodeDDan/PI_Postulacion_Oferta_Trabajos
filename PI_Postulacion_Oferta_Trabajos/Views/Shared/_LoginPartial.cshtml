@using Microsoft.AspNetCore.Identity
@using PI_Postulacion_Oferta_Trabajos.Models

@inject SignInManager<Usuario> SignInManager
@inject UserManager<Usuario> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Bienvenido @user?.UsuNombre @user?.UsuApellido</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link nav-link-salir btn btn-link text-dark">
                    <i class="bi bi-box-arrow-left"></i> 
                    Salir
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link nav-link-custom text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">
                <i class="bi bi-person-plus-fill"></i> Registrarse
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link nav-link-custom text-dark" id="login" asp-area="Identity" asp-page="/Account/Login" style="margin-right: 30px">
                <i class="bi bi-box-arrow-in-right"></i>
                Ingresar
            </a>
        </li>
    }
</ul>
