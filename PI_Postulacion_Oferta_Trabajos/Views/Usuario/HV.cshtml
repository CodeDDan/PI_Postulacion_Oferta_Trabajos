@model IEnumerable<PI_Postulacion_Oferta_Trabajos.Models.UsuarioIdioma>

@{
    ViewData["Title"] = "Hoja de Vida";
}

<!-- SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
<link rel="stylesheet" href="~/PI_Postulacion_Oferta_Trabajos.styles.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous" />

<style>
    body{
        background-color: rgb(237, 241, 247);
    }
    .i-trash {
        display: inline-block;
        width: 16px;
        height: 16px;
        background-image: url('/images/trash.png');
        background-size: contain;
        background-repeat: no-repeat;
        vertical-align: middle;
    }

    .i-pencil {
        display: inline-block;
        width: 16px;
        height: 16px;
        background-image: url('/images/pencil.png');
        background-size: contain;
        background-repeat: no-repeat;
        vertical-align: middle;
        background-color: red; /* Temporal para verificar si la clase se aplica */
    }


    .container {
        width: 100%;
        margin: auto;
        font-family: Arial, sans-serif;
        display: flex;
    }

    .profile-section, .doc-section {
        width: 35%;
        padding: 20px;
        border-right: 1px solid #ccc;
        max-height: 900px;
    }

    .doc-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: 0 auto; /* Centra el contenedor horizontalmente */
        /* Añade más estilos si es necesario */
    }

    .profile-img {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        margin-bottom: 10px;
    }

    .content-section {
        width: 1000px;
        padding: 20px;
    }

    .tabs {
        display: flex;
        justify-content: space-around;
        border-bottom: 1px solid #ccc;
        margin-bottom: 20px;
        margin-top: 20px;
    }

        .tabs button {
            background: none;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .tabs button.active {
                border-bottom: 2px solid #ff4081;
                color: #ff4081;
            }

    .section-content {
        display: none;
    }

        .section-content.active {
            display: block;
        }

    .section {
        margin-bottom: 20px;
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .section-header h2 {
            font-size: 18px;
            margin: 0;
        }

    .section .item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-bottom: 10px;
        background-color: #f9f9f9;
    }

        .section .item i {
            font-size: 24px;
            color: #ccc;
        }

        .section .item button {
            background: none;
            border: none;
            color: #ff4081;
            cursor: pointer;
            font-size: 14px;
            font-weight: bold;
        }

            .section .item button i {
                margin-right: 5px;
            }

    .form-group label {
        font-weight: bold;
    }

    .form-group select {
        width: 100%;
        padding: 5px;
        margin-bottom: 15px;
        border-radius: 5px;
        border: 1px solid #ccc;
        background-color: #f9f9f9;
    }

        .form-group select:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

    .item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

        .item .icons {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }

        .item button {
            margin: 5px 0; /* Espacio entre los botones */
            background: none;
            border: none;
            padding: 0;
            cursor: pointer;
        }

        .item div {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            height: 100%; /* Asegura que ocupe el espacio disponible */
        }

    .modal-header {
        border-bottom: none;
    }

    .modal-title {
        color: #1a73e8;
        font-size: 24px;
        font-weight: bold;
    }

    .form-group label {
        font-weight: bold;
        color: #1a73e8;
    }

    .form-control {
        border: 2px solid #1a73e8;
        border-radius: 4px;
    }

        .form-control:focus {
            box-shadow: none;
            border-color: #1a73e8;
        }

    .modal-footer .btn-secondary {
        color: #ff4081;
        background-color: transparent;
        border: none;
        font-weight: bold;
    }

    .modal-footer .btn-primary {
        background-color: #808080;
        border: none;
        font-weight: bold;
    }

        .modal-footer .btn-primary:hover {
            background-color: #4c4c4c;
        }

    .required {
        color: red;
    }

    .select2-container {
        z-index: 2050 !important; /* Asegúrate de que este valor sea mayor que el z-index del modal */
    }
    /* Asegura que el dropdown de select2 esté correctamente posicionado */
    .select2-container--open {
        z-index: 2050 !important; /* Un z-index más alto que el modal */
    }

    .select2-search__field {
        width: 100% !important;
    }

    /* Para evitar interferencias, puedes forzar el comportamiento de Select2 dentro del modal */
    .select2-container--default .select2-results > .select2-results__options {
        max-height: 150px; /* Ajusta esto según tus necesidades */
        overflow-y: auto;
    }

    #institucion {
        width: 100%; /* O ajusta a un valor fijo, como 250px */
        height: 40px; /* Aumenta la altura */
    }

</style>
<div class="container">
    <div class="profile-section">
        <div id="profileImgContainer" style="margin-left: 68px; border-radius: 50%; margin-bottom: 10px; position: relative; display: inline-block;">
            <img id="profileImg" src="~/images/profile-placeholder.png" alt="Profile Picture" class="profile-img" style="width: 125px; height: 125px; border-radius: 50%; cursor: pointer;">

            <label for="imageUpload" style="position: absolute; bottom: 0; right: 0; cursor: pointer;">
                <svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16" style="background-color: white; border-radius: 50%; padding: 5px;">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                </svg>
            </label>

            <input type="file" id="imageUpload" accept="image/*" style="display: none;" />
        </div>

        <h4 id="nombreApellido" style="margin-left: 21px; color: rgb(10, 38, 238);"><strong></strong></h4>
        <div style="display: flex; align-items: center;">
            <b>
                <h6 style="margin: 0;"><strong>Datos personales</strong></h6>
            </b>
            <svg xmlns="http://www.w3.org/2000/svg" id="editDatos" width="16" height="16" fill="currentColor" class="bi bi-pencil" type="button" data-toggle="modal" data-target="#PersonalModal" viewBox="0 0 16 16" style="margin-left: 120px; cursor: pointer;">
                <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325" />
            </svg>

        </div>
        <hr style="margin: 20px 0; border: none; border-top: 1px solid black;">
        <div class="profile-details">
            <p><strong>Fecha de nacimiento:</strong> <span id="fechaNacimientoDisplay"></span></p>
            <p><strong>Género:</strong> <span id="generoDisplay"></span></p>
            <p><strong>Estado civil:</strong> <span id="estadoCivilDisplay"></span></p>
            <p><strong>Documento:</strong> <span id="cedulaDisplay"></span></p>
            <p><strong>Email:</strong> <span id="emailDisplay"></span></p>
        </div>
        <hr style="margin: 20px 0; border: none; border-top: 1px solid #ddd;">

        <h5 style="color:rgb(10, 38, 238); display: inline-block;">
            HV adjunta

        </h5>

        <div id="cvSection">
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#uploadModal"
                    style=" background: none;border: none;color: #ff4081; cursor: pointer;font-size: 14px;font-weight: bold;">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                    <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                </svg> Subir HV
            </button>
            <p>Carga tu HV de hasta 3.5Mb en formato .pdf.</p>
        </div>
        <hr style="margin: 20px 0; border: none; border-top: 1px solid #ddd;">

        <h5 style="color:rgb(10, 38, 238); display: inline-block;">
            Cambiar contraseña

        </h5>

        <div id="passSection">
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#changePasswordModal"
                    style=" background: none;border: none;color: #ff4081; cursor: pointer;font-size: 14px;font-weight: bold;">
               <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-shield-shaded" viewBox="0 0 16 16">
                 <path fill-rule="evenodd" d="M8 14.933a1 1 0 0 0 .1-.025q.114-.034.294-.118c.24-.113.547-.29.893-.533a10.7 10.7 0 0 0 2.287-2.233c1.527-1.997 2.807-5.031 2.253-9.188a.48.48 0 0 0-.328-.39c-.651-.213-1.75-.56-2.837-.855C9.552 1.29 8.531 1.067 8 1.067zM5.072.56C6.157.265 7.31 0 8 0s1.843.265 2.928.56c1.11.3 2.229.655 2.887.87a1.54 1.54 0 0 1 1.044 1.262c.596 4.477-.787 7.795-2.465 9.99a11.8 11.8 0 0 1-2.517 2.453 7 7 0 0 1-1.048.625c-.28.132-.581.24-.829.24s-.548-.108-.829-.24a7 7 0 0 1-1.048-.625 11.8 11.8 0 0 1-2.517-2.453C1.928 10.487.545 7.169 1.141 2.692A1.54 1.54 0 0 1 2.185 1.43 63 63 0 0 1 5.072.56"/>
                </svg> Cambiar contraseña
            </button>
        </div>
    </div>
    <div class="content-section">
        <div class="tabs">
            <button id="education-tab" class="active">Educación</button>
            <button id="experience-tab">Experiencia</button>
            <button id="profile-tab">Perfil</button>
        </div>

        <div id="education-section" class="section-content active">
            <div class="section">
                <div class="section-header">
                    <h2>Formación académica y cursos</h2>
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#educationModal"
                            style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 14px; font-weight: bold;">
                        Sumar estudio
                    </button>
                </div>
                <div id="educationList" class="item-list">
                </div>
            </div>

            <div class="section">
                <div class="section-header">
                    <h2>Idiomas</h2>
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#idiomaModal"
                            style=" background: none;border: none;color: #ff4081; cursor: pointer;font-size: 14px;font-weight: bold;">
                        Sumar idioma
                    </button>
                </div>
                <div id="idiomasContainer">
                    @if (Model.Any()) // Verifica si el modelo contiene registros de idiomas
                    {
                        foreach (var idioma in Model)
                        {
                            <div class="item">
                                <span style="color:rgb(10, 38, 238)"><b>@idioma.IDI_IDIOMA</b></span>
                                <div>
                                    <p><b>Escrito:</b> @idioma.IDI_ESCRITO</p>
                                    <p><b>Oral:</b> @idioma.IDI_ORAL</p>
                                </div>
                                <div class="icons">
                                    <button class="btn btn-link" value="@idioma.IDI_ID" data-toggle="modal" data-target="#idiomaEditModal">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                            <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325" />
                                        </svg>
                                    </button>
                                    <button id="deleteIdioma" class="btn btn-link" value="@idioma.IDI_ID">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                            <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="item">
                            <span>Agrega tu primer idioma</span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div id="experience-section" class="section-content">
            <div class="section">
                <div class="section-header">
                    <h2>Experiencia laboral</h2>
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addExperienceModal"
                            style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 14px; font-weight: bold;">
                        Sumar experiencia
                    </button>
                </div>
                <div id="experienceList" class="item-list">
                    <!-- Aquí se cargarán las experiencias laborales -->
                </div>
            </div>
        </div>

        <div id="profile-section" class="section-content">
            <div class="section">
                <div class="section-header">
                    <h2>Objetivo laboral</h2>
                    <div id="botonesObj">
                    </div>
                </div>
                <div id="objectiveList" class="item-list">
                    <!-- Aquí se cargarán las experiencias laborales -->
                </div>
                <div class="section-header">
                    <h2>Preferencia salarial</h2>
                    <div id="botonesSal">
                    </div>
                </div>
                <div id="salaryList" class="item-list">
                    <!-- Aquí se cargarán las experiencias laborales -->
                </div>
                <div class="section-header">
                    <h2>Discapacidad</h2>
                    <div id="botonesDis">
                    </div>
                </div>
                <div id="disabilityList" class="item-list">
                    <!-- Aquí se cargarán las experiencias laborales -->
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="PersonalModal" tabindex="-1" role="dialog" aria-labelledby="PersonalModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="PersonalModalLabel">Datos personales</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="personalForm">
                    <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                    <div class="form-group">
                        <label for="fechaNacimiento">Fecha de Nacimiento</label>
                        <input type="date" class="form-control" id="fechaNacimiento" name="UsdFechaNacimiento">
                    </div>
                    <div class="form-group">
                        <label for="estadoCivil">Estado Civil</label>
                        <select class="form-control" id="estadoCivil" name="UsdEstadoCivil">
                            <!-- Las opciones se llenarán dinámicamente -->
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="provincia">Provincia</label>
                        <select class="form-control" id="provincia" name="UsdProvincia">
                            <!-- Las opciones se llenarán dinámicamente -->
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="ciudad">Ciudad</label>
                        <select class="form-control" id="ciudad" name="UsdCiudad">
                            <!-- Las opciones se llenarán dinámicamente -->
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="genero">Género</label>
                        <select class="form-control" id="genero" name="UsdGenero">
                            <!-- Las opciones se llenarán dinámicamente -->
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" class="form-control" id="email" name="Email" required>
                        <small class="form-text text-muted">Por favor ingrese un correo electrónico válido.</small>
                    </div>
                    <div class="form-group">
                        <label for="phoneNumber">Número de Teléfono</label>
                        <input type="text" class="form-control" id="phoneNumber" name="PhoneNumber" pattern="^0[1-9]\d{8}|9\d{8}$" required>
                        <small class="form-text text-muted">El número debe tener 9 dígitos y comenzar con 0, 1 o 9.</small>
                    </div>
                    <div class="form-group">
                        <label for="cedula">Cédula</label>
                        <input type="text" class="form-control" id="cedula" name="Cedula" pattern="^\d{10}$" required>
                        <small class="form-text text-muted">La cédula debe tener exactamente 10 dígitos.</small>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                        <button type="submit" class="btn btn-primary" id="saveChanges" style="background-color: #ff4081; border-color: #ff4081;">Guardar cambios</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



@* ------------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------------ *@
@*-------------------------------- MODALES PARA CAMBIAR LA PW  ------------------------------------------------- *@
@* ------------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------------ *@


<!-- Modal para Cambiar Contraseña -->
<div class="modal fade" id="changePasswordModal" tabindex="-1" role="dialog" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalLabel">Cambiar Contraseña</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="changePasswordForm">
                    <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                    <div class="form-group">
                        <label for="oldPassword">Contraseña Antigua</label>
                        <input type="password" class="form-control" id="oldPassword" name="oldPassword" required>
                    </div>
                    <div class="form-group">
                        <label for="newPassword">Contraseña Nueva</label>
                        <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                    </div>
                    <div class="form-group">
                        <label for="confirmNewPassword">Confirmar Nueva Contraseña</label>
                        <input type="password" class="form-control" id="confirmNewPassword" name="confirmNewPassword" required>
                    </div>
                    <button type="submit" class="btn btn-primary" style="background-color: #ff4081; border-color: #ff4081;">Cambiar Contraseña</button>
                </form>
            </div>
        </div>
    </div>
</div>

@* ------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------ *@
@*-------------------------------- MODALES PARA PERFIL  ------------------------------------------------- *@
@* ------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------ *@
<div class="modal fade" id="addObjetiveModal" tabindex="-1" aria-labelledby="addObjetiveModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addObjetiveModalLabel">Escribir Objetivo Laboral</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="objetiveForm">
                    <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                    <div class="mb-3">
                        <textarea class="form-control" id="UspAspiracionLarboral" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary" style="background-color: #ff4081; border-color: #ff4081;">Guardar</button>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="addSalaryModal" tabindex="-1" aria-labelledby="addSalaryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSalaryModalLabel">Escribir Preferencia Salarial</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="salaryForm">
                    <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                    <div class="mb-3">
                        <input type="number" class="form-control" id="UspPreferenciaSalarial" required>
                    </div>
                    <button type="submit" class="btn btn-primary" style="background-color: #ff4081; border-color: #ff4081;">Guardar</button>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="addDisabilityModal" tabindex="-1" aria-labelledby="addDisabilityModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addDisabilityModalLabel">Agregar Discapacidad</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="disabilityForm">
                    <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                    <div class="mb-3">
                        <input type="text" class="form-control" id="UspDiscapacidad" required>
                    </div>
                    <button type="submit" class="btn btn-primary" style="background-color: #ff4081; border-color: #ff4081;">Guardar</button>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="editObjetiveModal" tabindex="-1" aria-labelledby="editObjetiveLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editObjetiveModalLabel">Editar Objetivo Laboral</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="objetiveFormEdit">
                    <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                    <div class="mb-3">
                        <textarea class="form-control" id="editUspAspiracionLarboral" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary" style="background-color: #ff4081; border-color: #ff4081;">Editar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editSalaryModal" tabindex="-1" aria-labelledby="editSalaryLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editSalaryLabel">Editar Preferencia Salarial</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="salaryFormEdit">
                    <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                    <div class="mb-3">
                        <input type="number" class="form-control" id="editUspPreferenciaSalarial" required>
                    </div>
                    <button type="submit" class="btn btn-primary" style="background-color: #ff4081; border-color: #ff4081;">Editar</button>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="editDisabilityModal" tabindex="-1" aria-labelledby="editDisabilityModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editDisabilityModalLabel">Editar Discapacidad</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="disabilityFormEdit">
                    <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                    <div class="mb-3">
                        <input type="text" class="form-control" id="editUspDiscapacidad" required>
                    </div>
                    <button type="submit" class="btn btn-primary" style="background-color: #ff4081; border-color: #ff4081;">Editar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@* ------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------ *@
@*-------------------------------- MODALES PARA SUBIR CV ---------------------------------------------- *@
@* ------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------ *@
<div class="modal fade" id="uploadModal" tabindex="-1" role="dialog" aria-labelledby="uploadModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadModalLabel">Subir archivo PDF</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="uploadForm" enctype="multipart/form-data">
                <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                <div class="modal-body">
                    <div class="form-group">
                        <label for="pdfFile">Selecciona un archivo PDF:</label>
                        <input type="file" class="form-control-file" id="pdfFile" name="pdfFile" accept=".pdf" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary" style="background-color: #ff4081; border-color: #ff4081;">
                        Subir
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@* ------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------ *@
@*-------------------------------- MODALES PARA EDUCACION ---------------------------------------------- *@
@* ------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------ *@
<div class="modal fade" id="educationModal" tabindex="-1" role="dialog" aria-labelledby="educationModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="educationModalLabel">Sumar estudio</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="guardarEducacion">
                    <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="USE_TITULO"> Título / Carrera <span class="required">*</span></label>
                            <input type="text" class="form-control" id="USE_TITULO" name="USE_TITULO" placeholder="Título / Carrera">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="USE_TIPO_FORMACION">Tipo de estudio <span class="required">*</span></label>
                            <select id="USE_TIPO_FORMACION" name="USE_TIPO_FORMACION" class="form-control">
                                <option value="Curso">Curso</option>
                                <option value="Secundaria">Secundaria</option>
                                <option value="Terciario">Terciario</option>
                                <option value="Universitario">Universitario</option>
                                <option value="Posgrado">Posgrado</option>
                                <option value="Doctorado">Doctorado</option>
                                <option value="Otro">Otro</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="USE_AREA">Área de estudio <span class="required">*</span></label>
                            <input type="text" class="form-control" id="USE_AREA" name="USE_AREA" placeholder="Área de estudio">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="USE_ESTADO">Estado <span class="required">*</span></label>
                            <select id="USE_ESTADO" name="USE_ESTADO" class="form-control">
                                <option value="En Curso">En Curso</option>
                                <option value="Graduado">Graduado</option>
                                <option value="Abandonado">Abandonado</option>
                                <!-- Agrega más opciones según sea necesario -->
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="USE_INSTITUCION">Institución <span class="required">*</span></label>
                            <br />
                            <select id="USE_INSTITUCION" name="USE_INSTITUCION" class="form-control">
                                <option value="">Selecciona una institución</option>
                                <option value="Universidad Central del Ecuador">Universidad Central del Ecuador</option>
                                <option value="Escuela Politécnica Nacional">Escuela Politécnica Nacional</option>
                                <option value="Universidad San Francisco de Quito">Universidad San Francisco de Quito</option>
                                <option value="Universidad de Cuenca">Universidad de Cuenca</option>
                                <option value="Pontificia Universidad Católica del Ecuador">Pontificia Universidad Católica del Ecuador</option>
                                <option value="Universidad Técnica de Ambato">Universidad Técnica de Ambato</option>
                                <option value="Universidad Técnica de Manabí">Universidad Técnica de Manabí</option>
                                <option value="Universidad de las Fuerzas Armadas ESPE">Universidad de las Fuerzas Armadas ESPE</option>
                                <option value="Universidad de Guayaquil">Universidad de Guayaquil</option>
                                <option value="Universidad Católica de Santiago de Guayaquil">Universidad Católica de Santiago de Guayaquil</option>
                                <option value="Universidad del Azuay">Universidad del Azuay</option>
                                <option value="Escuela Superior Politécnica del Litoral">Escuela Superior Politécnicadel Litoral</option>
                                <option value="Universidad Andina Simón Bolívar">Universidad Andina Simón Bolívar</option>
                                <option value="Universidad Técnica Particular de Loja">Universidad Técnica Particular de Loja</option>
                                <option value="Universidad Laica Eloy Alfaro de Manabí">Universidad Laica Eloy Alfaro de Manabí</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="USE_FECHAI">Fecha de inicio <span class="required">*</span></label>
                            <input type="month" class="form-control" id="USE_FECHAI" name="USE_FECHAI">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="USE_FECHAF">Fecha de finalización <span class="required">*</span></label>
                            <input type="month" class="form-control" id="USE_FECHAF" name="USE_FECHAF">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                        <button type="submit" value="guardarEducacion" class="btn btn-primary"
                                style="border-color:#ff4081;background-color:#ff4081">
                            Guardar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="educacionEditModal" tabindex="-1" role="dialog" aria-labelledby="educacionEditModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="educacionEditModalLabel">Sumar estudio</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editarEducacion">
                    <input type="text" id="UseId" name="UseId" class="form-control" hidden />
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="USE_TITULOEdit"> Título / Carrera <span class="required">*</span></label>
                            <input type="text" class="form-control" id="USE_TITULOEdit" name="USE_TITULOEdit" placeholder="Título / Carrera">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="USE_TIPO_FORMACIONEdit">Tipo de estudio <span class="required">*</span></label>
                            <select id="USE_TIPO_FORMACIONEdit" name="USE_TIPO_FORMACIONEdit" class="form-control">
                                <option value="Curso">Curso</option>
                                <option value="Secundaria">Secundaria</option>
                                <option value="Terciario">Terciario</option>
                                <option value="Universitario">Universitario</option>
                                <option value="Posgrado">Posgrado</option>
                                <option value="Doctorado">Doctorado</option>
                                <option value="Otro">Otro</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="USE_AREAEdit">Área de estudio <span class="required">*</span></label>
                            <input type="text" class="form-control" id="USE_AREAEdit" name="USE_AREAEdit" placeholder="Área de estudio">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="USE_ESTADOEdit">Estado <span class="required">*</span></label>
                            <select id="USE_ESTADOEdit" name="USE_ESTADOEdit" class="form-control">
                                <option value="En Curso">En Curso</option>
                                <option value="Graduado">Graduado</option>
                                <option value="Abandonado">Abandonado</option>
                                <!-- Agrega más opciones según sea necesario -->
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="USE_INSTITUCIONEdit">Institución <span class="required">*</span></label>
                            <br />
                            <select id="USE_INSTITUCIONEdit" name="USE_INSTITUCIONEdit" class="form-control">
                                <option value="">Selecciona una institución</option>
                                <option value="Universidad Central del Ecuador">Universidad Central del Ecuador</option>
                                <option value="Escuela Politécnica Nacional">Escuela Politécnica Nacional</option>
                                <option value="Universidad San Francisco de Quito">Universidad San Francisco de Quito</option>
                                <option value="Universidad de Cuenca">Universidad de Cuenca</option>
                                <option value="Pontificia Universidad Católica del Ecuador">Pontificia Universidad Católica del Ecuador</option>
                                <option value="Universidad Técnica de Ambato">Universidad Técnica de Ambato</option>
                                <option value="Universidad Técnica de Manabí">Universidad Técnica de Manabí</option>
                                <option value="Universidad de las Fuerzas Armadas ESPE">Universidad de las Fuerzas Armadas ESPE</option>
                                <option value="Universidad de Guayaquil">Universidad de Guayaquil</option>
                                <option value="Universidad Católica de Santiago de Guayaquil">Universidad Católica de Santiago de Guayaquil</option>
                                <option value="Universidad del Azuay">Universidad del Azuay</option>
                                <option value="Escuela Superior Politécnica del Litoral">Escuela Superior Politécnicadel Litoral</option>
                                <option value="Universidad Andina Simón Bolívar">Universidad Andina Simón Bolívar</option>
                                <option value="Universidad Técnica Particular de Loja">Universidad Técnica Particular de Loja</option>
                                <option value="Universidad Laica Eloy Alfaro de Manabí">Universidad Laica Eloy Alfaro de Manabí</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="USE_FECHAIEdit">Fecha de inicio <span class="required">*</span></label>
                            <input type="month" class="form-control" id="USE_FECHAIEdit" name="USE_FECHAIEdit">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="USE_FECHAFEdit">Fecha de finalización <span class="required">*</span></label>
                            <input type="month" class="form-control" id="USE_FECHAFEdit" name="USE_FECHAFEdit">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                        <button type="submit" value="updateEducacion" class="btn btn-primary"
                                style="border-color:#ff4081;background-color:#ff4081">
                            Editar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@* ------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------ *@
@*-------------------------------- MODALES PARA IDIOMAS ---------------------------------------------- *@
@* ------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------ *@
<div class="modal fade" id="idiomaEditModal" tabindex="-1" role="dialog" aria-labelledby="idiomaEditModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="idiomaEditModalLabel">Editar idioma</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="EditarIdiomaForm" asp-action="EditarIdioma" method="POST">
                    <input id="IDI_ID" name="IDI_ID" hidden />
                    <input id="IDI_IDIOMA" name="IDI_IDIOMA" hidden />
                    <div class="form-group">
                        <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId"
                               hidden />

                    </div>
                    <div class="form-group">
                        <label for="Idioma">Idioma:</label>
                        <h3 style="color:rgb(10, 38, 238)" id="selectedLang"></h3>
                    </div>
                    <div class="form-group">
                        <label for="Escrito">Nivel escrito*</label>
                        <select id="IDI_ESCRITO" name="IDI_ESCRITO" class="form-control" required>
                            <option value="Básico">Básico</option>
                            <option value="Intermedio">Intermedio</option>
                            <option value="Avanzado">Avanzado</option>
                            <option value="Nativo">Nativo</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Oral">Nivel oral*</label>
                        <select id="IDI_ORAL" name="IDI_ORAL" class="form-control" required>
                            <option value="Básico">Básico</option>
                            <option value="Intermedio">Intermedio</option>
                            <option value="Avanzado">Avanzado</option>
                            <option value="Nativo">Nativo</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                        <button type="submit" value="idiomaEditModal" class="btn btn-primary"
                                style="border-color:#ff4081;background-color:#ff4081">
                            Editar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="idiomaModal" tabindex="-1" role="dialog" aria-labelledby="idiomaModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="idiomaModalLabel">Sumar idioma</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="usuarioIdiomaForm">
                    <div class="form-group">
                        <input type="text" id="UsuarioId" name="UsuarioId" class="form-control" value="@ViewBag.UserId" hidden />
                    </div>
                    <div class="form-group">
                        <label for="Idioma">Idioma*</label>
                        <select id="IDI_IDIOMA" name="IDI_IDIOMA" class="form-control" required>
                            <option value="Mandarín">Mandarín</option>
                            <option value="Español">Español</option>
                            <option value="Inglés">Inglés</option>
                            <option value="Francés">Francés</option>
                            <option value="Hindi">Hindi</option>
                            <option value="Árabe">Árabe</option>
                            <option value="Bengalí">Bengalí</option>
                            <option value="Portugués">Portugués</option>
                            <option value="Ruso">Ruso</option>
                            <option value="Japonés">Japonés</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Escrito">Nivel escrito*</label>
                        <select id="IDI_ESCRITO" name="IDI_ESCRITO" class="form-control" required>
                            <option value="Básico">Básico</option>
                            <option value="Intermedio">Intermedio</option>
                            <option value="Avanzado">Avanzado</option>
                            <option value="Nativo">Nativo</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Oral">Nivel oral*</label>
                        <select id="IDI_ORAL" name="IDI_ORAL" class="form-control" required>
                            <option value="Básico">Básico</option>
                            <option value="Intermedio">Intermedio</option>
                            <option value="Avanzado">Avanzado</option>
                            <option value="Nativo">Nativo</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                        <button type="submit" value="GuardarIdioma" class="btn btn-primary" style="border-color:#ff4081;background-color:#ff4081">Guardar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@* ------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------ *@
@*-------------------------------- MODALES PARA EXP LABORAL ---------------------------------------------- *@
@* ------------------------------------------------------------------------------------------------------ *@
@* ------------------------------------------------------------------------------------------------------ *@
<div class="modal fade" id="editExperienceModal" tabindex="-1" aria-labelledby="editExperienceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editExperienceModalLabel">Editar Experiencia Laboral</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editExperienceForm" method="post">
                <div class="modal-body">
                    <input type="hidden" id="UsxId" name="UsxId" />
                        <input type="text" class="form-control" id="UsuarioId" name="UsuarioId" HIDDEN />
                    <div class="mb-3">
                        <label for="UsxEmpresa" class="form-label">Empresa</label>
                        <input type="text" class="form-control" id="UsxEmpresa" name="UsxEmpresa" required />
                    </div>

                    <div class="mb-3">
                        <label for="UsxArea" class="form-label">Área</label>
                        <input type="text" class="form-control" id="UsxArea" name="UsxArea" required />
                    </div>

                    <div class="mb-3">
                        <label for="UsxPuesto" class="form-label">Puesto</label>
                        <input type="text" class="form-control" id="UsxPuesto" name="UsxPuesto" required />
                    </div>

                    <div class="mb-3">
                        <label for="UsxFechaInicio" class="form-label">Fecha de Inicio</label>
                        <input type="date" class="form-control" id="UsxFechaInicio" name="UsxFechaInicio" required />
                    </div>

                    <div class="mb-3">
                        <label for="UsxFechaFin" class="form-label">Fecha de Fin</label>
                        <input type="date" class="form-control" id="UsxFechaFin" name="UsxFechaFin" />
                    </div>

                    <div class="mb-3">
                        <label for="UsxNivelExperiencia" class="form-label">Nivel de Experiencia</label>
                        <input type="text" class="form-control" id="UsxNivelExperiencia" name="UsxNivelExperiencia" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary" style="border-color:#ff4081;background-color:#ff4081">Guardar cambios</button>
                </div>
            </form>
        </div>
    </div>
</div>



<div class="modal fade" id="addExperienceModal" tabindex="-1" aria-labelledby="addExperienceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addExperienceModalLabel">Guardar Experiencia Laboral</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addExperienceForm" method="post">
                <div class="modal-body">
                    <input type="hidden" id="UsxId" name="UsxId" />
                    <input type="text" class="form-control" id="UsuarioId" value="@ViewBag.UserId" name="UsuarioId" hidden />
                    <div class="mb-3">
                        <label for="UsxEmpresa" class="form-label">Empresa</label>
                        <input type="text" class="form-control" id="UsxEmpresa" name="UsxEmpresa" required />
                    </div>

                    <div class="mb-3">
                        <label for="UsxArea" class="form-label">Área</label>
                        <input type="text" class="form-control" id="UsxArea" name="UsxArea" required />
                    </div>

                    <div class="mb-3">
                        <label for="UsxPuesto" class="form-label">Puesto</label>
                        <input type="text" class="form-control" id="UsxPuesto" name="UsxPuesto" required />
                    </div>

                    <div class="mb-3">
                        <label for="UsxFechaInicio" class="form-label">Fecha de Inicio</label>
                        <input type="date" class="form-control" id="UsxFechaInicio" name="UsxFechaInicio" required />
                    </div>

                    <div class="mb-3">
                        <label for="UsxFechaFin" class="form-label">Fecha de Fin</label>
                        <input type="date" class="form-control" id="UsxFechaFin" name="UsxFechaFin" />
                    </div>

                    <div class="mb-3">
                        <label for="UsxNivelExperiencia" class="form-label">Nivel de Experiencia</label>
                        <input type="text" class="form-control" id="UsxNivelExperiencia" name="UsxNivelExperiencia" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary" style="border-color:#ff4081;background-color:#ff4081">Guardar cambios</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <!-- SweetAlert JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script>
        const usuarioId = '@ViewBag.UserId';
        $('#profileImg').on('click', function () {
            $('#imageUpload').click();
        });

        // Al hacer clic en el ícono, también se abrirá el selector de imágenes
        $('#profileImgContainer label').on('click', function () {
            $('#imageUpload').click();
        });



        document.getElementById('education-tab').addEventListener('click', function () {
            showSection('education');
        });
        document.getElementById('experience-tab').addEventListener('click', function () {
            showSection('experience');
        });
        document.getElementById('profile-tab').addEventListener('click', function () {
            showSection('profile');
        });



        function showSection(section) {
            document.querySelectorAll('.section-content').forEach(function (content) {
                content.classList.remove('active');
            });
            document.getElementById(section + '-section').classList.add('active');

            document.querySelectorAll('.tabs button').forEach(function (tab) {
                tab.classList.remove('active');
            });
            document.getElementById(section + '-tab').classList.add('active');
        }



        function cargarCiudades(provinciaId, ciudadSeleccionada) {
            $.ajax({
                url: '@Url.Action("GetCiudadesPorProvincia", "Ciudades")',
                type: 'GET',
                data: { provinciaId: provinciaId },
                success: function (ciudades) {
                    var selectCiudad = $('#ciudad');
                    selectCiudad.empty(); // Limpiar opciones actuales
                    $.each(ciudades, function (index, ciudad) {
                        var option = $('<option>', {
                            value: ciudad.cidNombre,
                            text: ciudad.cidNombre
                        });

                        if (ciudad.cidNombre === ciudadSeleccionada) {
                            option.prop('selected', true);
                        }

                        selectCiudad.append(option);
                    });
                }
            });
        }
        function cargarProvincias() {
            $.ajax({
                url: '@Url.Action("GetProvincias", "Provincias")',
                type: 'GET',
                success: function (provincias) {
                    var selectProvincia = $('#provincia');
                    selectProvincia.empty();  // Limpiar las opciones actuales

                    // Iterar sobre las provincias obtenidas y agregarlas como opciones
                    $.each(provincias, function (index, provincia) {
                        var option = $('<option>', {
                            value: provincia.proId,
                            text: provincia.proNombre
                        });

                        // Seleccionar la primera provincia de la lista automáticamente
                        if (index === 0) {
                            option.prop('selected', true);  // Marcar la primera opción como seleccionada
                            cargarCiudades(provincia.proId); // Cargar las ciudades de la primera provincia seleccionada
                        }

                        selectProvincia.append(option);
                    });
                },
                error: function () {
                    console.log('Error al obtener las provincias.');
                }
            });
        }

        // Evento para manejar el cambio en el select de provincias
        $(document).on('change', '#provincia', function () {
            var provinciaId = $(this).val();
            cargarCiudades(provinciaId, ''); // Limpia la selección de ciudad cuando se cambia la provincia
        });

        $(document).ready(function () {



            // ######################################################################################################
            // ######################################################################################################
            // ###################################### Sección de cambiar PW #########################################
            // ######################################################################################################
            // ######################################################################################################
            $("#changePasswordForm").on("submit", function (event) {
                event.preventDefault(); // Evita el envío normal del formulario

                // Obtiene los valores del formulario
                var usuarioId = $("#UsuarioId").val();
                var oldPassword = $("#oldPassword").val();
                var newPassword = $("#newPassword").val();
                var confirmNewPassword = $("#confirmNewPassword").val();

                // Realiza la llamada AJAX
                $.ajax({
                    url: '@Url.Action("ChangePassword", "Usuario")',
                    type: 'POST',
                    data: {
                        usuarioId: usuarioId,
                        oldPassword: oldPassword,
                        newPassword: newPassword,
                        confirmNewPassword: confirmNewPassword
                    },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Éxito',
                                text: response.message,
                                timer: 1500,
                                showConfirmButton: false,
                                timerProgressBar: true
                            }).then(() => {
                                $('#changePasswordModal').modal('hide'); // Cierra el modal
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message,
                                confirmButtonText: 'Aceptar'
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Error al cambiar la contraseña: ' + error,
                            confirmButtonText: 'Aceptar'
                        });
                    }
                });
            });

            // ##################################################################################################
            // ##################################################################################################
            // ###################################### Sección de Perfil #########################################
            // ##################################################################################################
            // ##################################################################################################


            loadPerfil();
            // Función para manejar el envío del formulario de objetivo laboral
            $('#objetiveForm').on('submit', function (e) {
                e.preventDefault(); // Evita el comportamiento predeterminado del formulario

                // Recolecta los datos del formulario
                var formData = {
                    UsuarioId: $('#UsuarioId').val(),
                    UspAspiracionLarboral: $('#UspAspiracionLarboral').val()
                };

                // Enviar los datos mediante AJAX
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SaveObjetive", "UsuarioPerfiles")',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            // Muestra un SweetAlert de éxito con duración de 1500ms
                            Swal.fire({
                                title: '¡Éxito!',
                                text: 'Objetivo laboral guardado exitosamente.',
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                // Cierra el modal
                                $('#addObjetiveModal').modal('hide');
                                loadPerfil();
                            });
                        } else {
                            Swal.fire('Error', 'Hubo un error al guardar el objetivo laboral.', 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'Hubo un error en el servidor.', 'error');
                    }
                });
            });

            // Función para manejar el envío del formulario de preferencia salarial
            $('#salaryForm').on('submit', function (e) {
                e.preventDefault(); // Evita el comportamiento predeterminado del formulario

                // Recolecta los datos del formulario
                var formData = {
                    UsuarioId: $('#UsuarioId').val(),
                    UspPreferenciaSalarial: $('#UspPreferenciaSalarial').val()
                };

                // Enviar los datos mediante AJAX
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SaveSalary", "UsuarioPerfiles")',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: '¡Éxito!',
                                text: 'Preferencia salarial guardada exitosamente.',
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                $('#addSalaryModal').modal('hide');
                                loadPerfil();
                            });
                        } else {
                            Swal.fire('Error', 'Hubo un error al guardar la preferencia salarial.', 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'Hubo un error en el servidor.', 'error');
                    }
                });
            });

            // Función para manejar el envío del formulario de discapacidad
            $('#disabilityForm').on('submit', function (e) {
                e.preventDefault(); // Evita el comportamiento predeterminado del formulario

                // Recolecta los datos del formulario
                var formData = {
                    UsuarioId: $('#UsuarioId').val(),
                    UspDiscapacidad: $('#UspDiscapacidad').val()
                };

                // Enviar los datos mediante AJAX
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SaveDisability", "UsuarioPerfiles")',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: '¡Éxito!',
                                text: 'Discapacidad guardada exitosamente.',
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                $('#addDisabilityModal').modal('hide');
                                loadPerfil();
                            });
                        } else {
                            Swal.fire('Error', 'Hubo un error al editada la discapacidad.', 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'Hubo un error en el servidor.', 'error');
                    }
                });
            });

            $('#objetiveFormEdit').on('submit', function (e) {
                e.preventDefault(); // Evita el comportamiento predeterminado del formulario
                
                // Recolecta los datos del formulario
                var formData = {
                    UsuarioId: $('#UsuarioId').val(),
                    UspAspiracionLarboral: $('#editUspAspiracionLarboral').val()
                };

                // Enviar los datos mediante AJAX
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SaveObjetive", "UsuarioPerfiles")',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            // Muestra un SweetAlert de éxito con duración de 1500ms
                            Swal.fire({
                                title: '¡Éxito!',
                                text: 'Objetivo laboral editado exitosamente.',
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                // Cierra el modal
                                $('#addObjetiveModal').modal('hide');
                                loadPerfil();
                            });
                        } else {
                            Swal.fire('Error', 'Hubo un error al editada el objetivo laboral.', 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'Hubo un error en el servidor.', 'error');
                    }
                });
            });

            // Función para manejar el envío del formulario de preferencia salarial
            $('#salaryFormEdit').on('submit', function (e) {
                e.preventDefault(); // Evita el comportamiento predeterminado del formulario

                // Recolecta los datos del formulario
                var formData = {
                    UsuarioId: $('#UsuarioId').val(),
                    UspPreferenciaSalarial: $('#editUspPreferenciaSalarial').val()
                };

                // Enviar los datos mediante AJAX
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SaveSalary", "UsuarioPerfiles")',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: '¡Éxito!',
                                text: 'Preferencia salarial editada exitosamente.',
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                $('#addSalaryModal').modal('hide');
                                loadPerfil();
                            });
                        } else {
                            Swal.fire('Error', 'Hubo un error al editada la preferencia salarial.', 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'Hubo un error en el servidor.', 'error');
                    }
                });
            });

            // Función para manejar el envío del formulario de discapacidad
            $('#disabilityFormEdit').on('submit', function (e) {
                e.preventDefault(); // Evita el comportamiento predeterminado del formulario

                // Recolecta los datos del formulario
                var formData = {
                    UsuarioId: $('#UsuarioId').val(),
                    UspDiscapacidad: $('#editUspDiscapacidad').val()
                };

                // Enviar los datos mediante AJAX
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SaveDisability", "UsuarioPerfiles")',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: '¡Éxito!',
                                text: 'Discapacidad editada exitosamente.',
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                $('#addDisabilityModal').modal('hide');
                                loadPerfil();
                            });
                        } else {
                            Swal.fire('Error', 'Hubo un error al guardar la discapacidad.', 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'Hubo un error en el servidor.', 'error');
                    }
                });
            });

            $(document).on('click', '#deleteSalario', function () {
                const usuarioId = $(this).val();
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "No podrás revertir esta acción.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminarlo!',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Si el usuario confirma, realizar la petición AJAX
                        $.ajax({
                            url: '@Url.Action("EliminarSalario", "UsuarioPerfiles")', // Asegúrate de que la URL esté correcta
                            type: 'POST',
                            data: { usuarioId: usuarioId },
                            success: function (response) {
                                if (response.success) {
                                    // Mostrar mensaje de éxito con SweetAlert
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Eliminado',
                                        text: 'La preferencia salarial ha sido eliminada.',
                                        timer: 1500,
                                        showConfirmButton: false
                                    });

                                    // Recargar el perfil o hacer cualquier actualización necesaria
                                    loadPerfil();
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: response.message,
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Ocurrió un error al eliminar la preferencia salarial.',
                                });
                            }
                        });
                    }
                });
            });

            $(document).on('click', '#deleteObjective', function () {
                const usuarioId = $(this).val();
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "No podrás revertir esta acción.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminarlo!',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Si el usuario confirma, realizar la petición AJAX
                        $.ajax({
                            url: '@Url.Action("EliminarObjetivo", "UsuarioPerfiles")', // Asegúrate de que la URL esté correcta
                            type: 'POST',
                            data: { usuarioId: usuarioId },
                            success: function (response) {
                                if (response.success) {
                                    // Mostrar mensaje de éxito con SweetAlert
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Eliminado',
                                        text: 'El objetivo laboral ha sido eliminada.',
                                        timer: 1500,
                                        showConfirmButton: false
                                    });

                                    // Recargar el perfil o hacer cualquier actualización necesaria
                                    loadPerfil();
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: response.message,
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Ocurrió un error al eliminar el objetivo laboral.',
                                });
                            }
                        });
                    }
                });
            });

            $(document).on('click', '#deleteDiscapacidad', function () {
                const usuarioId = $(this).val();
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "No podrás revertir esta acción.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminarlo!',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Si el usuario confirma, realizar la petición AJAX
                        $.ajax({
                            url: '@Url.Action("EliminarDiscapacidad", "UsuarioPerfiles")', // Asegúrate de que la URL esté correcta
                            type: 'POST',
                            data: { usuarioId: usuarioId },
                            success: function (response) {
                                if (response.success) {
                                    // Mostrar mensaje de éxito con SweetAlert
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Eliminado',
                                        text: 'El dato ha sido eliminada.',
                                        timer: 1500,
                                        showConfirmButton: false
                                    });

                                    // Recargar el perfil o hacer cualquier actualización necesaria
                                    loadPerfil();
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: response.message,
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Ocurrió un error al eliminar los datos.',
                                });
                            }
                        });
                    }
                });
            });

            $(document).on('click', '.edit-objetive-btn', function () {
                const experienceId = $(this).data('id'); // Obtén el ID de la experiencia desde el botón

                $.ajax({
                    url: '@Url.Action("ObtenerSalarioPorId", "UsuarioPerfiles")',
                    type: 'GET',
                    data: { usuarioId: experienceId },
                    success: function (data) {
                        $('#editUspAspiracionLarboral').val(data.data.uspAspiracionLarboral);

                    },
                    error: function () {
                        alert('Error al cargar los datos de la experiencia laboral.');
                    }
                });
            });

            $(document).on('click', '.edit-salary-btn', function () {
                const experienceId = $(this).data('id'); // Obtén el ID de la experiencia desde el botón

                $.ajax({
                    url: '@Url.Action("ObtenerSalarioPorId", "UsuarioPerfiles")',
                    type: 'GET',
                    data: { usuarioId: experienceId },
                    success: function (data) {
                        console.log(data.data.uspAspiracionLarboral);
                        $('#editUspPreferenciaSalarial').val(data.data.uspPreferenciaSalarial);

                    },
                    error: function () {
                        alert('Error al cargar los datos de la experiencia laboral.');
                    }
                });
            });
            $(document).on('click', '.edit-disability-btn', function () {
                const experienceId = $(this).data('id'); // Obtén el ID de la experiencia desde el botón

                $.ajax({
                    url: '@Url.Action("ObtenerSalarioPorId", "UsuarioPerfiles")',
                    type: 'GET',
                    data: { usuarioId: experienceId },
                    success: function (data) {
                        console.log(data.data.uspDiscapacidad);
                        $('#editUspDiscapacidad').val(data.data.uspDiscapacidad);

                    },
                    error: function () {
                        alert('Error al cargar los datos de la experiencia laboral.');
                    }
                });
            });







            // ##################################################################################################
            // ##################################################################################################
            // ###################################### Sección de EXP Laboral ####################################
            // ##################################################################################################
            // ##################################################################################################

            loadExperiencias();

            $(document).on('click', '.edit-experience-btn', function () {
                const experienceId = $(this).data('id'); // Obtén el ID de la experiencia desde el botón

                $.ajax({
                    url: '@Url.Action("GetExperienceById", "UsuarioExperienciasLaborales")',
                    type: 'GET',
                    data: { id: experienceId },
                    success: function (data) {
                        // Llena el formulario con los datos recibidos
                        $('#UsxId').val(data.usxId);
                        $('#UsuarioId').val(data.usuarioId);
                        $('#UsxEmpresa').val(data.usxEmpresa);
                        $('#UsxArea').val(data.usxArea);
                        $('#UsxPuesto').val(data.usxPuesto);
                        $('#UsxFechaInicio').val(new Date(data.usxFechaInicio).toISOString().split('T')[0]);
                        $('#UsxFechaFin').val(data.usxFechaFin ? new Date(data.usxFechaFin).toISOString().split('T')[0] : '');
                        $('#UsxNivelExperiencia').val(data.usxNivelExperiencia);

                    },
                    error: function () {
                        alert('Error al cargar los datos de la experiencia laboral.');
                    }
                });
            });

            $('#editExperienceForm').submit(function (event) {
                event.preventDefault(); // Prevenir el envío del formulario por defecto

                var formData = $(this).serialize(); // Serializar todos los datos del formulario
                $.ajax({
                    url: '@Url.Action("EditExperience", "UsuarioExperienciasLaborales")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Éxito',
                                text:'Experiencia laboral actualizada exitosamente.',
                                timer: 1500,
                                showConfirmButton: false,
                                timerProgressBar: true
                            });
                        } else {
                            alert('Error al actualizar la experiencia laboral.');
                        }
                    },
                    error: function () {
                        alert('Error al enviar los datos.');
                    }
                });
            });

            $(document).on('click', '#deleteExperiencia', function () {
                const experienceId = $(this).val(); // Obtener el ID de la experiencia laboral

                // Confirmar la eliminación usando SweetAlert
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "¡No podrás revertir esto!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Realizar la solicitud AJAX para eliminar la experiencia laboral
                        $.ajax({
                            url: '@Url.Action("DeleteExperience", "UsuarioExperienciasLaborales")',
                            type: 'POST',
                            data: { id: experienceId },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Éxito',
                                        text: 'La experiencia laboral ha sido eliminada.',
                                        timer: 1500,
                                        showConfirmButton: false,
                                        timerProgressBar: true
                                    });

                                    // Recargar la lista de experiencias laborales
                                    loadExperiencias();
                                } else {
                                    Swal.fire(
                                        'Error',
                                        'Hubo un problema al eliminar la experiencia laboral.',
                                        'error'
                                    );
                                }
                            },
                            error: function () {
                                Swal.fire(
                                    'Error',
                                    'Error en la solicitud. Inténtalo de nuevo.',
                                    'error'
                                );
                            }
                        });
                    }
                });
            });
            $('#addExperienceForm').on('submit', function (e) {
                e.preventDefault(); // Prevenir el envío tradicional del formulario

                const formData = $(this).serialize(); // Serializar los datos del formulario

                $.ajax({
                    url: '@Url.Action("SaveExperience", "UsuarioExperienciasLaborales")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Éxito',
                                text: 'La experiencia laboral ha sido guardada.',
                                timer: 1500,
                                showConfirmButton: false,
                                timerProgressBar: true
                            }).then(() => {
                                // Recargar la lista de experiencias laborales
                                loadExperiencias();
                                $('#addExperienceForm').modal('hide');
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message || 'Hubo un problema al guardar la experiencia.',
                                confirmButtonColor: '#ff4081',
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Hubo un problema con la solicitud.',
                            confirmButtonColor: '#ff4081',
                        });
                    }
                });
            });

            // ################################################################################################
            // ################################################################################################
            // ###################################### Sección de educación ####################################
            // ################################################################################################
            // ################################################################################################
            var today = new Date();

            // Calcular la fecha máxima permitida (hace 18 años desde hoy)
            var maxYear = today.getFullYear() - 18;
            var maxMonth = ('0' + (today.getMonth() + 1)).slice(-2);
            var maxDay = ('0' + today.getDate()).slice(-2);
            var maxDate = maxYear + '-' + maxMonth + '-' + maxDay;

            // Calcular la fecha mínima permitida (hace 80 años desde hoy)
            var minYear = today.getFullYear() - 80;
            var minMonth = ('0' + (today.getMonth() + 1)).slice(-2);
            var minDay = ('0' + today.getDate()).slice(-2);
            var minDate = minYear + '-' + minMonth + '-' + minDay;

            // Establecer la fecha máxima y mínima en el campo de fecha de nacimiento
            $('#fechaNacimiento').attr('max', maxDate);
            $('#fechaNacimiento').attr('min', minDate);


            $.ajax({
                url: '@Url.Action("GetUserData", "UsuarioDetalles")',
                type: 'GET',
                data: { userId: usuarioId },
                success: function (response) {
                    if (response !== null) {
                        // Nombre completo
                        var nombreCompleto = (response.userInfo.usuNombre + " " + response.userInfo.usuApellido).toUpperCase();
                        $('#nombreApellido').text(nombreCompleto);

                        // Fecha de nacimiento
                        var fechaNacimiento = response.usuarioDetalle?.usdFechaNacimiento;
                        if (fechaNacimiento) {
                            $('#fechaNacimientoDisplay').text(fechaNacimiento.split('T')[0]);
                        } else {
                            // Fecha predeterminada para persona de 18 años o más
                            var today = new Date();
                            var eighteenYearsAgo = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate());
                            var formattedDate = eighteenYearsAgo.toISOString().split('T')[0];
                            $('#fechaNacimientoDisplay').text(formattedDate);
                        }

                        // Otros detalles personales
                        $('#generoDisplay').text(response.usuarioDetalle?.usdGenero || 'No disponible');
                        $('#estadoCivilDisplay').text(response.usuarioDetalle?.usdEstadoCivil || 'No disponible');
                        $('#cedulaDisplay').text(response.userInfo?.usuCedula || 'No disponible');
                        $('#emailDisplay').text(response.userInfo?.email || 'No disponible');
                    }
                },
                error: function () {
                    console.log('Error al obtener los datos del usuario.');
                }
            });


            $(document).on('click', '#editDatos', function () {
                var userId = '@ViewBag.UserId'; // Obtenemos el UserId
                $('#personalForm').submit(function (e) {
                    e.preventDefault();

                    var formData = $(this).serialize(); // Serializar todos los datos del formulario

                    $.ajax({
                        url: '@Url.Action("UpdateUserData", "UsuarioDetalles")',
                        type: 'POST',
                        data: formData,
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Éxito',
                                    text: response.message,
                                    timer: 1500,
                                    showConfirmButton: false,
                                    timerProgressBar: true
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error',
                                    text: response.message,
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: 'Error',
                                text: 'Ocurrió un problema al enviar los datos.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                });
                $.ajax({
                    url: '@Url.Action("GetUserData", "UsuarioDetalles")',
                    type: 'GET',
                    data: { userId: userId },
                    success: function (data) {
                        // Opciones predefinidas para Estado Civil, Género y provincias
                        var estadoCivilOptions = [
                            'Soltero/a',
                            'Casado/a',
                            'Divorciado/a',
                            'Pareja de Hecho',
                            'Viudo/a',
                            'Unión Libre'
                        ];
                        var generoOptions = [
                            'Masculino',
                            'Femenino',
                            'Otro'
                        ];

                        var estadoCivilSelect = $('#estadoCivil');
                        var generoSelect = $('#genero');
                        var selectProvincia = $('#provincia');

                        // Si hay datos disponibles, llenar los selects con los valores correspondientes
                        if (data!=null && data.usuarioDetalle!=null) {
                            // Llenar el select de estado civil
                            estadoCivilSelect.empty();
                            $.each(estadoCivilOptions, function (index, option) {
                                var newOption = $('<option>', {
                                    value: option,
                                    text: option
                                });

                                if (option === data.usuarioDetalle.usdEstadoCivil) {
                                    newOption.prop('selected', true);
                                }

                                estadoCivilSelect.append(newOption);
                            });

                            // Llenar el select de provincias
                            selectProvincia.empty();
                            var provinciaSeleccionada = data.proId;
                            var ciudadSeleccionada = data.usuarioDetalle.usdCiudad;

                            $.each(data.provincias, function (index, provincia) {
                                var option = $('<option>', {
                                    value: provincia.proId,
                                    text: provincia.proNombre
                                });

                                if (provincia.proId === provinciaSeleccionada) {
                                    option.prop('selected', true);
                                    cargarCiudades(provincia.proId, ciudadSeleccionada); // Cargar las ciudades de la provincia seleccionada
                                }

                                selectProvincia.append(option);
                            });

                            // Llenar el select de género
                            generoSelect.empty();
                            $.each(generoOptions, function (index, option) {
                                var newOption = $('<option>', {
                                    value: option,
                                    text: option
                                });

                                if (option === data.usuarioDetalle.usdGenero) {
                                    newOption.prop('selected', true);
                                }

                                generoSelect.append(newOption);
                            });

                            // Llenar otros campos
                            var fechaNacimiento = data.usuarioDetalle?.usdFechaNacimiento;

                            if (fechaNacimiento) {
                                // Si existe fecha de nacimiento, usa esa fecha
                                $('#fechaNacimiento').val(fechaNacimiento.split('T')[0]);
                            } else {
                                // Si no existe fecha de nacimiento, calcula una fecha para una persona de 18 años o más
                                var today = new Date();
                                var eighteenYearsAgo = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate());
                                var formattedDate = eighteenYearsAgo.toISOString().split('T')[0];

                                // Establecer la fecha por defecto
                                $('#fechaNacimiento').val(formattedDate);
                            }
                            $('#email').val(data.userInfo.email);
                            $('#phoneNumber').val(data.userInfo.phoneNumber);
                            $('#cedula').val(data.userInfo.usuCedula);
                        } else {
                            
                            estadoCivilSelect.empty();
                            $.each(estadoCivilOptions, function (index, option) {
                                var newOption = $('<option>', {
                                    value: option,
                                    text: option
                                });

                                // Seleccionar la primera opción como predeterminada
                                if (index === 0) {
                                    newOption.prop('selected', true);
                                }

                                estadoCivilSelect.append(newOption);
                            });

                            generoSelect.empty();
                            $.each(generoOptions, function (index, option) {
                                var newOption = $('<option>', {
                                    value: option,
                                    text: option
                                });

                                // Seleccionar la primera opción como predeterminada
                                if (index === 0) {
                                    newOption.prop('selected', true);
                                }

                                generoSelect.append(newOption);
                            });

                            cargarProvincias();
                            var fechaNacimiento = data.usuarioDetalle?.usdFechaNacimiento;
                            if (fechaNacimiento) {
                                // Si existe fecha de nacimiento, usa esa fecha
                                $('#fechaNacimiento').val(fechaNacimiento.split('T')[0]);
                            } else {
                                // Si no existe fecha de nacimiento, calcula una fecha para una persona de 18 años o más
                                var today = new Date();
                                var eighteenYearsAgo = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate());
                                var formattedDate = eighteenYearsAgo.toISOString().split('T')[0];

                                // Establecer la fecha por defecto
                                $('#fechaNacimiento').val(formattedDate);
                            }
                            $('#email').val(data.userInfo.email);
                            $('#phoneNumber').val(data.userInfo.phoneNumber);
                            $('#cedula').val(data.userInfo.usuCedula);
                        }
                    },
                    error: function () {
                        console.log('Error al obtener los datos.');
                    }
                });
            });
            function updateProfileImage() {
                $.ajax({
                    url: '@Url.Action("GetProfileImageUrl", "UsuarioDetalles")',
                    type: 'GET',
                    data: { usuarioId: usuarioId },
                    success: function (response) {
                        if (response.url) {
                            $('#profileImg').attr('src', response.url);
                        }
                    },
                    error: function () {
                        console.log('Error al obtener la URL de la imagen.');
                    }
                });
            }

            updateProfileImage();
            $(document).on('change', '#imageUpload', function (event) {
                const file = event.target.files[0];
                if (file) {
                    const formData = new FormData();
                    formData.append('file', file);
                    formData.append('usuarioId', usuarioId); // Añade el ID del usuario si es necesario

                    Swal.fire({
                        title: 'Subiendo imagen...',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    $.ajax({
                        url: '@Url.Action("UploadProfileImage", "UsuarioDetalles")',
                        type: 'POST',
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function (response) {
                            if (response.success) {
                                Swal.fire(
                                    'Subida exitosa',
                                    'Tu imagen de perfil ha sido actualizada.',
                                    'success'
                                ).then(() => {
                                    // Cambia la imagen de perfil a la nueva imagen subida
                                    $('#profileImg').attr('src', response.imageUrl);
                                });
                            } else {
                                Swal.fire(
                                    'Error',
                                    'No se pudo subir la imagen: ' + response.message,
                                    'error'
                                );
                            }
                        },
                        error: function () {
                            Swal.fire(
                                'Error',
                                'Error en la solicitud.',
                                'error'
                            );
                        }
                    });
                }
            });

            $(document).on('click', '#deleteIcon', function () {

                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "No podrás revertir esta acción",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DeleteCV", "UsuarioCV")',
                            type: 'POST',
                            data: { usuarioId: usuarioId },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire(
                                        'Eliminado!',
                                        'Tu CV ha sido eliminado.',
                                        'success'
                                    ).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire(
                                        'Error!',
                                        'No se pudo eliminar el CV: ' + response.message,
                                        'error'
                                    );
                                }
                            },
                            error: function () {
                                Swal.fire(
                                    'Error!',
                                    'Error en la solicitud.',
                                    'error'
                                );
                            }
                        });
                    }
                });
            });


            $.ajax({
                url: '@Url.Action("CheckUserCV", "UsuarioCV")',
                type: 'GET',
                data: { UsuarioId: usuarioId },
                success: function (response) {
                    if (response.hasCV) {
                        // Mostrar el ícono de basurero y el botón de descarga


                        $('#cvSection').html(
                            '<a href="/CV/' + response.fileName + '" download="' + response.fileName + '" class="btn btn-primary"' +
                            ' style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 20px; font-weight: bold; margin-top: 15px; display: inline-block; text-align: center; padding: 10px 15px;">' +
                            ' Descargar CV <br> <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-arrow-down-circle-fill" viewBox="0 0 16 16"' +
                            ' style="vertical-align: middle; margin-right: 10px;">' +
                            '<path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v5.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293z"/>' +
                            '</svg>' +
                            '</a>' +
                            '<br>' +
                            '<a id="deleteIcon" class="btn btn-primary"' +
                            ' style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 22px; font-weight: bold; margin-top: 15px; display: inline-block; text-align: center; padding: 10px 15px;">' +
                            ' Eliminar CV <br><svg  xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">' +
                            '<path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>' +
                            '<path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>' +
                            '</svg>' +
                            '</a>'
                        );
                    } else {
                        // Mostrar solo el botón de subida
                        $('#cvSection').html(
                            '<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#uploadModal"' +
                            ' style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 14px; font-weight: bold;">' +
                            '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle"' +
                            ' viewBox="0 0 16 16">' +
                            '<path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />' +
                            '<path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />' +
                            '</svg> Subir HV' +
                            '</button>' +
                            '<p>Carga tu HV de hasta 3.5Mb en formato .pdf.</p>'
                        );
                    }
                },
                error: function () {
                    alert('Error al verificar el CV');
                }
            });
            $('#uploadForm').submit(function (e) {
                e.preventDefault();

                var formData = new FormData(this);

                $.ajax({
                    url: '@Url.Action("UploadPdf", "UsuarioCV")',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Éxito',
                            text: 'Datos guardados correctamente.',
                            timer: 1500,
                            showConfirmButton: false,
                            timerProgressBar: true
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        Swal.fire(
                            'Error',
                            'Error al guardar CV: ' + error,
                            'error'
                        );
                    }
                });
            });



            $('#editarEducacion').submit(function (event) {
                event.preventDefault(); // Previene el envío del formulario de forma tradicional
                var cd = $(this).serialize();
                $.ajax({
                    url: '@Url.Action("UpdateEducacion", "UsuarioEducaciones")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Éxito',
                            text: 'Datos guardados correctamente.',
                            timer: 1500,
                            showConfirmButton: false,
                            timerProgressBar: true
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        Swal.fire(
                            'Error',
                            'Error al eliminar el idioma: ' + error,
                            'error'
                        );
                    }
                });
            });
            $(document).on('click', '#educacionEdit', function () {
                var useId = $(this).val();
                // Hacer una llamada AJAX para obtener los datos del estudio
                $.ajax({
                    url: '@Url.Action("GetEducacionEdit", "UsuarioEducaciones")',
                    type: 'GET',
                    data: { usuarioId: useId },
                    success: function (data) {
                        // Rellenar los campos del formulario con los datos recibidos
                        $('#UseId').val(data[0].useId);
                        $('#USE_TITULOEdit').val(data[0].usE_TITULO);
                        $('#USE_TIPO_FORMACIONEdit').val(data[0].usE_TIPO_FORMACION);
                        $('#USE_AREAEdit').val(data[0].usE_AREA);
                        $('#USE_ESTADOEdit').val(data[0].usE_ESTADO);
                        $('#USE_INSTITUCIONEdit').val(data[0].usE_INSTITUCION);
                        $('#USE_FECHAIEdit').val(data[0].usE_FECHAI);
                        $('#USE_FECHAFEdit').val(data[0].usE_FECHAF);

                    },
                    error: function (xhr, status, error) {
                        Swal.fire(
                            'Error',
                            'Error al eliminar el idioma: ' + error,
                            'error'
                        );
                    }
                });
            });

            $('#deleteIdioma').click(function () {
                var idiomaId = $(this).val();
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "¡No podrás recuperar este idioma!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminarlo'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("EliminarIdioma", "UsuarioIdioma")',
                            type: 'POST',
                            data: { id: idiomaId },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire(
                                        'Eliminado',
                                        'El idioma ha sido eliminado.',
                                        'success'
                                    ).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire(
                                        'Error',
                                        response.message,
                                        'error'
                                    );
                                }
                            },
                            error: function (xhr, status, error) {
                                Swal.fire(
                                    'Error',
                                    'Error al eliminar el idioma: ' + error,
                                    'error'
                                );
                            }
                        });
                    }
                });
            });
            $(document).on('click', '#deleteEducacion', function () {
                var useId = $(this).val();
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "¡No podrás recuperar este estudio!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminarlo'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("EliminarEstudio", "UsuarioEducaciones")',
                            type: 'POST',
                            data: { UseId: useId },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire(
                                        'Eliminado',
                                        'El estudio ha sido eliminado.',
                                        'success'
                                    ).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire(
                                        'Error',
                                        response.message,
                                        'error'
                                    );
                                }
                            },
                            error: function (xhr, status, error) {
                                Swal.fire(
                                    'Error',
                                    'Error al eliminar el idioma: ' + error,
                                    'error'
                                );
                            }
                        });
                    }
                });
            });
            $.ajax({
                url: '@Url.Action("GetEducacion", "UsuarioEducaciones")',
                type: 'GET',
                data: { usuarioId: usuarioId },
                success: function (data) {
                    let itemsHtml = '';

                    if (data.length === 0) {
                        // Si no hay datos, mostrar mensaje predeterminado
                        itemsHtml = `
                        <div class="item">
                            <span>Agrega tu experiencia laboral</span>
                        </div>
                    `;
                    } else {
                        // Si hay datos, construir los elementos
                        data.forEach(function (item) {
                            itemsHtml += `
                            <div class="item">
                                <span>${item.usE_TITULO}</span>
                                <div>
                                    <p>${item.usE_INSTITUCION}</p>
                                    <p>${item.usE_TIPO_FORMACION} - ${item.usE_ESTADO}</p>
                                </div>
                                <div class="icons">
                                    <button class="btn btn-link" id="educacionEdit" value="${item.useId}" data-toggle="modal" data-target="#educacionEditModal">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                            <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325" />
                                        </svg>
                                    </button>
                                    <button id="deleteEducacion" class="btn btn-link" value="${item.useId}">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                            <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        `;
                        });
                    }

                    $('#educationList').html(itemsHtml); // Insertar datos en el contenedor específico
                },
                error: function (xhr, status, error) {
                    console.error('Error al obtener los datos:', error);
                }
            });

            $("#guardarEducacion").submit(function (event) {
                // Previene el comportamiento predeterminado del formulario
                event.preventDefault();

                // Serializa los datos del formulario
                var formData = $(this).serialize();
                console.log("Datos del formulario:", formData);
                // Envía la solicitud AJAX
                $.ajax({
                    url: '@Url.Action("AgregarEducacion", "UsuarioEducaciones")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Éxito',
                                text: 'correctamente'
                            }).then(() => {
                                $('#guardarEducacion')[0].reset();
                                location.reload();
                            });
                        }
                        else {
                            let errorMessage = response.errors ? response.errors.join('<br>') : response.message;
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                html: errorMessage,
                                confirmButtonText: 'Aceptar'
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Error al guardar los datos: ' + error,
                            confirmButtonText: 'Aceptar'
                        });
                    }
                });
            });
            $('#usuarioIdiomaForm').submit(function (event) {
                event.preventDefault(); // Previene el envío normal del formular
                $.ajax({
                    url: '@Url.Action("GuardarIdioma", "UsuarioIdioma")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Éxito',
                                text: 'Datos guardados correctamente.',
                                timer: 1500,
                                showConfirmButton: false,
                                timerProgressBar: true
                            }).then(() => {
                                $('#usuarioIdiomaForm')[0].reset();
                                location.reload();
                            });
                        } else {
                            let errorMessage = response.errors ? response.errors.join('<br>') : response.message;
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                html: errorMessage,
                                confirmButtonText: 'Aceptar'
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Error al guardar los datos: ' + error,
                            confirmButtonText: 'Aceptar'
                        });
                    }
                });
            });
            $("#EditarIdiomaForm").submit(function (event) {
                // Previene el comportamiento predeterminado del formulario
                event.preventDefault();

                // Serializa los datos del formulario
                var formData = $(this).serialize();

                // Envía la solicitud AJAX
                $.ajax({
                    url: '@Url.Action("EditarIdioma", "UsuarioIdioma")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Éxito',
                                text: 'Idioma editado correctamente.',
                                timer: 1500,
                                showConfirmButton: false,
                                timerProgressBar: true
                            }).then(() => {
                                // Obtiene los valores actualizados desde el formulario
                                var idiomaId = $('#IDI_ID').val();
                                var idiomaNombre = $('#IDI_IDIOMA').val();
                                var escritoNivel = $('#IDI_ESCRITO').val();
                                var oralNivel = $('#IDI_ORAL').val();

                                // Selecciona el contenedor del item por su valor de idiomaId y actualiza los textos
                                var itemElement = $(`.item input[value="${idiomaId}"]`).closest('.item');

                                // Actualiza el nombre del idioma
                                itemElement.find('span').text(idiomaNombre);

                                // Actualiza el nivel escrito
                                itemElement.find('p:contains("Escrito:")').html('<b>Escrito:</b> ' + escritoNivel);

                                // Actualiza el nivel oral
                                itemElement.find('p:contains("Oral:")').html('<b>Oral:</b> ' + oralNivel);
                            });
                        } else {
                            let errorMessage = response.errors ? response.errors.join('<br>') : response.message;
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                html: errorMessage,
                                confirmButtonText: 'Aceptar'
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Error al guardar los datos: ' + error,
                            confirmButtonText: 'Aceptar'
                        });
                    }
                });
            });

            $('.btn-link').click(function () {
                var idiomaId = $(this).val();
                var idiomaText = $(this).closest('.item').find('span').text();

                // Mostrar el nombre del idioma en el modal
                $('#selectedLang').text(idiomaText);
                var selectedLangText = $('#selectedLang').text();
                $('#IDI_IDIOMA').val(selectedLangText);

                // Establecer el ID del idioma en el campo oculto
                $('#IdiomaId').val(idiomaId);
                var nivelEscrito = $(this).closest('.item').find('p:contains("Escrito")').text().split(': ')[1];
                var nivelOral = $(this).closest('.item').find('p:contains("Oral")').text().split(': ')[1];
                $('#IDI_ESCRITO').val(nivelEscrito);
                $('#IDI_ORAL').val(nivelOral);
                $('#IDI_ID').val(idiomaId);
            });

        });

        // Validación de cédula ecuatoriana
        function validarCedula(cedula) {
            if (cedula.length !== 10) return false;

            let total = 0;
            let digito = parseInt(cedula.charAt(9));
            let coeficiente;

            for (let i = 0; i < 9; i++) {
                coeficiente = i % 2 === 0 ? 2 : 1;
                let valor = parseInt(cedula.charAt(i)) * coeficiente;
                total += valor > 9 ? valor - 9 : valor;
            }

            let mod = total % 10;
            let verificador = mod === 0 ? 0 : 10 - mod;

            return verificador === digito;
        }

        // Validar el formulario antes de enviar
        document.getElementById('personalForm').addEventListener('submit', function (event) {
            let cedula = document.getElementById('cedula').value;
            let phoneNumber = document.getElementById('phoneNumber').value;

            if (!validarCedula(cedula)) {
                alert('La cédula es inválida.');
                event.preventDefault(); // Evita el envío del formulario
            }

            // Validación adicional para el número de teléfono si es necesario
            // (Aquí puedes agregar más lógica si lo deseas)

        });

        // ####################################################################################################
        // ####################################################################################################
        // ###################################### Funciones de EXP Laboral ####################################
        // ####################################################################################################
        // ####################################################################################################


        function loadExperiencias() {
            $.ajax({
                url: '@Url.Action("GetExperienciasLaborales", "UsuarioExperienciasLaborales")',
                type: 'GET',
                data: { usuarioId: usuarioId },
                success: function (data) {
                    const experienceList = $('#experienceList');
                    experienceList.empty();

                    if (data.length > 0) {
                        data.forEach(experiencia => {
                            const experienciaHtml = `
                                    <div class="card mb-3">
                                                <div class="card-body">
                                                    <div class="d-flex justify-content-between align-items-start">
                                                        <div>
                                                            <h5 class="card-title">${experiencia.usxPuesto}</h5>
                                                            <h6 class="card-subtitle mb-2 text-muted">${experiencia.usxEmpresa} - ${experiencia.usxArea}</h6>
                                                            <p class="card-text">
                                                                <strong>Fecha de inicio:</strong> ${new Date(experiencia.usxFechaInicio).toLocaleDateString()}<br />
                                                                <strong>Fecha de fin:</strong> ${experiencia.usxFechaFin ? new Date(experiencia.usxFechaFin).toLocaleDateString() : 'Presente'}<br />
                                                                <strong>Nivel de experiencia:</strong> ${experiencia.usxNivelExperiencia}
                                                            </p>
                                                        </div>
                                                        <div class="icons d-flex flex-column align-items-end">
                                                                    <button class="btn btn-link edit-experience-btn" data-id="${experiencia.usxId}" data-toggle="modal" data-target="#editExperienceModal">
                                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                                                            <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325" />
                                                                        </svg>
                                                                    </button>
                                                                    <button id="deleteExperiencia" class="btn btn-link" value="${experiencia.usxId}">
                                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                                                    <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                                                </svg>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>

                                    </div>`;
                            experienceList.append(experienciaHtml);
                        });
                    } else {
                        const noExperienceHtml = `
                                <div class="card text-center">
                                    <div class="card-body">
                                        <img src="/images/exp_laboral.jpg" alt="No Experience" style="width: 400px;height: 400px;border-radius:10px;margin: 40px;">
                                        <p class="card-text" style="color: #007aff; font-size: 18px; font-weight: bold;">
                                          Dar click en Sumar experiencia para agragar expereincia
                                        </p>
                                    </div>
                                </div>`;
                        experienceList.append(noExperienceHtml);
                    }
                },
                error: function () {
                    alert('Error al cargar las experiencias laborales.');
                }
            });
        }

        function loadPerfil() {
            $.ajax({
                url: '@Url.Action("GetPerfil", "UsuarioPerfiles")',
                type: 'GET',
                data: { usuarioId: usuarioId },
                success: function (data) {
                    const objectiveList = $('#objectiveList');
                    const salaryList = $('#salaryList');
                    const disabilityList = $('#disabilityList');
                    const botonesObj = $('#botonesObj');
                    const botonesSal = $('#botonesSal');
                    const botonesDis = $('#botonesDis');
                    objectiveList.empty();
                    salaryList.empty();
                    disabilityList.empty();
                    botonesObj.empty();
                    botonesSal.empty();
                    botonesDis.empty();
                    console.log(data[0]);
                    if (typeof data[0] === 'undefined') { 
                    const tal = `
                                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addObjetiveModal"
                                                style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 14px; font-weight: bold;">
                                            Escribir objetivo laboral
                                            </button>`;
                        botonesObj.append(tal);

                        const noObjectiveHtml = `
                                                <div class="card text-center">
                                                    <div class="card-body">
                                                                <p class="card-text" style="color: rgba(0, 0, 24, 0.48);">
                                                                  Cuéntanos cuáles son tus expectativas profesionales
                                                        </p>
                                                    </div>
                                                </div>`;
                        objectiveList.append(noObjectiveHtml);

                        const tal2 = `
                                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addSalaryModal"
                                style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 14px; font-weight: bold;">
                                Escribir preferencia salarial
                                    </button>`;
                        botonesSal.append(tal2);
                        const noSalaryHtml = `
                                    <div class="card text-center">
                                        <div class="card-body">
                                                    <p class="card-text" style="color: rgba(0, 0, 24, 0.48);">
                                              Cuéntanos cuáles son tus expectativas profesionales
                                            </p>
                                        </div>
                                    </div>`;
                        salaryList.append(noSalaryHtml);
                        const tal3 = `
                                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addDisabilityModal"
                                            style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 14px; font-weight: bold;">
                                        Agregar discapacidad
                                        </button>`;
                        botonesDis.append(tal3);
                        const noDisabilityHtml = `
                                    <div class="card text-center">
                                        <div class="card-body">
                                                    <p class="card-text" style="color: rgba(0, 0, 24, 0.48);">
                                                      Si tienes alguna discapacidad, no es obligatorio que la declares. Pero si lo haces, te ayudará a encontrar puestos que mejor se adapten a tus necesidades.
                                            </p>
                                        </div>
                                    </div>`;
                        disabilityList.append(noDisabilityHtml);
                    }else{
                        if (data[0].uspAspiracionLarboral && data[0].uspAspiracionLarboral.trim() !== "") {
                            const delete_edit = `<button class="btn btn-link edit-objetive-btn" data-id="${data[0].usuarioId}" data-toggle="modal" data-target="#editObjetiveModal">
                                                <!-- Icono de lápiz para editar -->
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                                    <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"/>
                                                </svg>
                                            </button>
                                            <button id="deleteObjective" class="btn btn-link" value="${data[0].usuarioId}">
                                                <!-- Icono de basura para eliminar -->
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                                    <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5"/>
                                                </svg>
                                        </button>`;
                            botonesObj.append(delete_edit);

                            data.forEach(objective => {
                                const objectiveHtml = `
                                                            <div class="card mb-3">
                                                                        <div class="card-body">
                                                                            <div class="d-flex justify-content-between align-items-start">
                                                                                <div>
                                                                                    <p class="card-text">
                                                                                             ${data[0].uspAspiracionLarboral}
                                                                                    </p>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                            </div>`;
                                objectiveList.append(objectiveHtml);
                            });
                        } else {
                            const tal = `
                                                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addObjetiveModal"
                                                        style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 14px; font-weight: bold;">
                                                    Escribir objetivo laboral
                                                    </button>`;
                            botonesObj.append(tal);

                            const noObjectiveHtml = `
                                                        <div class="card text-center">
                                                            <div class="card-body">
                                                                        <p class="card-text" style="color: rgba(0, 0, 24, 0.48);">
                                                                          Cuéntanos cuáles son tus expectativas profesionales
                                                                </p>
                                                            </div>
                                                        </div>`;
                            objectiveList.append(noObjectiveHtml);
                        }
                        if (data[0].uspPreferenciaSalarial && data[0].uspPreferenciaSalarial.trim() !== "") {

                            const delete_edit2 = `<button class="btn btn-link edit-salary-btn" data-id="${data[0].usuarioId}" data-toggle="modal" data-target="#editSalaryModal">
                                    <!-- Icono de lápiz para editar -->
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"/>
                                    </svg>
                                </button>
                                        <button id="deleteSalario" class="btn btn-link" value="${data[0].usuarioId}">
                                    <!-- Icono de basura para eliminar -->
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                        <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5"/>
                                    </svg>
                                </button>`;
                            botonesSal.append(delete_edit2);
                            data.forEach(salary => {
                                const salaryHtml = `
                                        <div class="card mb-3">
                                                    <div class="card-body">
                                                        <div class="d-flex justify-content-between align-items-start">
                                                            <div>
                                                                <p class="card-text">
                                                                                    ${data[0].uspPreferenciaSalarial}
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                        </div>`;
                                salaryList.append(salaryHtml);
                            });
                        } else {
                            const tal2 = `
                                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addSalaryModal"
                                style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 14px; font-weight: bold;">
                                Escribir preferencia salarial
                                    </button>`;
                            botonesSal.append(tal2);
                            const noSalaryHtml = `
                                    <div class="card text-center">
                                        <div class="card-body">
                                                    <p class="card-text" style="color: rgba(0, 0, 24, 0.48);">
                                              Cuéntanos cuáles son tus expectativas profesionales
                                            </p>
                                        </div>
                                    </div>`;
                            salaryList.append(noSalaryHtml);
                        }
                        if (data[0].uspDiscapacidad && data[0].uspDiscapacidad.trim() !== "") {
                            const delete_edit3 = `<button class="btn btn-link edit-disability-btn" data-id="${data[0].usuarioId}" data-toggle="modal" data-target="#editDisabilityModal">
                                                                            <!-- Icono de lápiz para editar -->
                                                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                                                                <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"/>
                                                                            </svg>
                                                                        </button>
                                                                                <button id="deleteDiscapacidad" class="btn btn-link" value="${data[0].usuarioId}">
                                                                            <!-- Icono de basura para eliminar -->
                                                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                                                                <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5"/>
                                                                            </svg>
                                                                        </button>`;
                            botonesDis.append(delete_edit3);
                            data.forEach(salary => {
                                const disabilityHtml = `
                                                <div class="card mb-3">
                                                            <div class="card-body">
                                                                <div class="d-flex justify-content-between align-items-start">
                                                                    <div>
                                                                        <p class="card-text">
                                                                                                    ${data[0].uspDiscapacidad}
                                                                        </p>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                </div>`;
                                disabilityList.append(disabilityHtml);
                            });
                        } else {
                            const tal3 = `
                                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addDisabilityModal"
                                                    style="background: none; border: none; color: #ff4081; cursor: pointer; font-size: 14px; font-weight: bold;">
                                                Agregar discapacidad
                                                </button>`;
                            botonesDis.append(tal3);
                            const noDisabilityHtml = `
                                            <div class="card text-center">
                                                <div class="card-body">
                                                            <p class="card-text" style="color: rgba(0, 0, 24, 0.48);">
                                                              Si tienes alguna discapacidad, no es obligatorio que la declares. Pero si lo haces, te ayudará a encontrar puestos que mejor se adapten a tus necesidades.
                                                    </p>
                                                </div>
                                            </div>`;
                            disabilityList.append(noDisabilityHtml);
                        }
                    }
                },
                error: function () {
                    alert('Error al cargar las experiencias laborales.');
                }
            });
        }

        function empty(value) {
            return (
                value === undefined ||
                value === null ||
                (typeof value === 'string' && value.trim() === '') ||
                (Array.isArray(value) && value.length === 0) ||
                (typeof value === 'object' && value !== null && Object.keys(value).length === 0)
            );
        }

    </script>
}
