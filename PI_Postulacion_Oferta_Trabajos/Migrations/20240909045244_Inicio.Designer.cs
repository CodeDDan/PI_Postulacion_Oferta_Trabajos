// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PI_Postulacion_Oferta_Trabajos.Persistence.Context;

#nullable disable

namespace PI_Postulacion_Oferta_Trabajos.Migrations
{
    [DbContext(typeof(PO_TrabajosContext))]
    [Migration("20240909045244_Inicio")]
    partial class Inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "e2ac89c5-87ed-4356-a34d-b04117db0055",
                            ConcurrencyStamp = "02faf841-c54a-4237-b6f8-b921e84555a3",
                            Name = "admin",
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = "363beda3-7cc8-43af-9123-e813a46d6a2b",
                            ConcurrencyStamp = "be055cf9-f354-4218-880e-90aae9f085e3",
                            Name = "trabajador",
                            NormalizedName = "trabajador"
                        },
                        new
                        {
                            Id = "1fa5bed2-d336-433a-b5c0-4a35b034f034",
                            ConcurrencyStamp = "40804cee-20d1-4ed3-8111-40ce63e866be",
                            Name = "empleador",
                            NormalizedName = "empleador"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.AeSectorPrincipal", b =>
                {
                    b.Property<int>("AepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AEP_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AepId"), 1L, 1);

                    b.Property<string>("AepNombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("AEP_NOMBRE");

                    b.HasKey("AepId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("AepId"), false);

                    b.ToTable("AE_SECTORES_PRINCIPALES", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.AeSubdivision", b =>
                {
                    b.Property<int>("AedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AED_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AedId"), 1L, 1);

                    b.Property<string>("AedNombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("AED_NOMBRE");

                    b.Property<int>("AepId")
                        .HasColumnType("int")
                        .HasColumnName("AEP_ID");

                    b.HasKey("AedId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("AedId"), false);

                    b.HasIndex(new[] { "AepId" }, "FK_SECTORES_PRINCIPALES_SUBDIVISION_FK");

                    b.ToTable("AE_SUBDIVISION", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.AreaLaboral", b =>
                {
                    b.Property<int>("ArlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ARL_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArlId"), 1L, 1);

                    b.Property<string>("ArlNombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("ARL_NOMBRE");

                    b.HasKey("ArlId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("ArlId"), false);

                    b.ToTable("AREAS_LABORALES", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Ciudad", b =>
                {
                    b.Property<int>("CidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CID_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CidId"), 1L, 1);

                    b.Property<string>("CidNombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("CID_NOMBRE");

                    b.Property<int>("ProId")
                        .HasColumnType("int")
                        .HasColumnName("PRO_ID");

                    b.HasKey("CidId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("CidId"), false);

                    b.HasIndex(new[] { "ProId" }, "FK_PROVINCIAS_CIUDADES_FK");

                    b.ToTable("CIUDADES", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.CV", b =>
                {
                    b.Property<int>("UCV_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UCV_ID"), 1L, 1);

                    b.Property<string>("UCV_NOMBRE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UCV_ID");

                    b.ToTable("USUARIO_CV", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Empresa", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EMP_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"), 1L, 1);

                    b.Property<int>("AepId")
                        .HasColumnType("int")
                        .HasColumnName("AEP_ID");

                    b.Property<string>("EmpCiudad")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("EMP_CIUDAD");

                    b.Property<string>("EmpDescripcion")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("EMP_DESCRIPCION");

                    b.Property<string>("EmpEmailAcceso")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("EMP_EMAIL_ACCESO");

                    b.Property<string>("EmpEmailRegistro")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("EMP_EMAIL_REGISTRO");

                    b.Property<string>("EmpNombreEmpresa")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("EMP_NOMBRE_EMPRESA");

                    b.Property<decimal?>("EmpNumeroTrabajadores")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("EMP_NUMERO_TRABAJADORES");

                    b.Property<string>("EmpPassword")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("EMP_PASSWORD");

                    b.Property<string>("EmpRazonSocial")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("EMP_RAZON_SOCIAL");

                    b.Property<string>("EmpRuc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EMP_RUC");

                    b.Property<decimal>("EmpTelefono")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("EMP_TELEFONO");

                    b.Property<decimal?>("EmpVacantesAnuales")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("EMP_VACANTES_ANUALES");

                    b.HasKey("EmpId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("EmpId"), false);

                    b.HasIndex(new[] { "AepId" }, "FK_SECTORES_PRINCIPALES_EMPRESAS_FK");

                    b.ToTable("EMPRESAS", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.EstadoPostulacion", b =>
                {
                    b.Property<int>("EspId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EspId"), 1L, 1);

                    b.Property<string>("EspDescripcion")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("ESP_DESCRIPCION");

                    b.Property<string>("EspNombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("ESP_NOMBRE");

                    b.HasKey("EspId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("EspId"), false);

                    b.ToTable("ESTADO_POSTULACION", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Oferta", b =>
                {
                    b.Property<int>("OfeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OFE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfeId"), 1L, 1);

                    b.Property<int>("ArlId")
                        .HasColumnType("int")
                        .HasColumnName("ARL_ID");

                    b.Property<int>("CidId")
                        .HasColumnType("int")
                        .HasColumnName("CID_ID");

                    b.Property<int>("EmpId")
                        .HasColumnType("int")
                        .HasColumnName("EMP_ID");

                    b.Property<decimal>("OfeCantidadVacantes")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("OFE_CANTIDAD_VACANTES");

                    b.Property<string>("OfeDescripcion")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("OFE_DESCRIPCION");

                    b.Property<bool>("OfeDiscapacidad")
                        .HasColumnType("bit")
                        .HasColumnName("OFE_DISCAPACIDAD");

                    b.Property<bool>("OfeDisponibilidadCambioResidencia")
                        .HasColumnType("bit")
                        .HasColumnName("OFE_DISPONIBILIDAD_CAMBIO_RESIDENCIA");

                    b.Property<bool>("OfeDisponibilidadViajar")
                        .HasColumnType("bit")
                        .HasColumnName("OFE_DISPONIBILIDAD_VIAJAR");

                    b.Property<int?>("OfeEdadMinima")
                        .HasColumnType("int")
                        .HasColumnName("OFE_EDAD_MINIMA");

                    b.Property<string>("OfeEducacionMinima")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("OFE_EDUCACION_MINIMA");

                    b.Property<DateTime>("OfeFechaPublicacion")
                        .HasColumnType("datetime")
                        .HasColumnName("OFE_FECHA_PUBLICACION");

                    b.Property<bool>("OfeLicencia")
                        .HasColumnType("bit")
                        .HasColumnName("OFE_LICENCIA");

                    b.Property<decimal>("OfeSalario")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("OFE_SALARIO");

                    b.Property<int>("OfeTiempoExperiencia")
                        .HasColumnType("int")
                        .HasColumnName("OFE_TIEMPO_EXPERIENCIA");

                    b.Property<string>("OfeTipoContrato")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("OFE_TIPO_CONTRATO");

                    b.Property<string>("OfeTitulo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("OFE_TITULO");

                    b.Property<int>("OfmId")
                        .HasColumnType("int")
                        .HasColumnName("OFM_ID");

                    b.Property<int>("ProId")
                        .HasColumnType("int")
                        .HasColumnName("PRO_ID");

                    b.Property<int>("PulId")
                        .HasColumnType("int")
                        .HasColumnName("PUL_ID");

                    b.HasKey("OfeId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("OfeId"), false);

                    b.HasIndex(new[] { "EmpId" }, "FK_EMPRESAS_OFERTAS_FK");

                    b.HasIndex(new[] { "ArlId" }, "FK_OFERTAS_AREAS_LABORALES_FK");

                    b.HasIndex(new[] { "CidId" }, "FK_OFERTAS_CIUDAD_FK");

                    b.HasIndex(new[] { "OfmId" }, "FK_OFERTAS_OFERTA_MODALIDAD_FK");

                    b.HasIndex(new[] { "ProId" }, "FK_OFERTAS_PROVINCIAS_FK");

                    b.HasIndex(new[] { "PulId" }, "FK_OFERTAS_PUESTOS_LABORALES_FK");

                    b.ToTable("OFERTAS", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.OfertaModalidad", b =>
                {
                    b.Property<int>("OfmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OFM_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfmId"), 1L, 1);

                    b.Property<string>("OfmNombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("OFM_NOMBRE");

                    b.HasKey("OfmId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("OfmId"), false);

                    b.ToTable("OFERTA_MODALIDAD", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Postulacion", b =>
                {
                    b.Property<int>("PosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("POS_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosId"), 1L, 1);

                    b.Property<int>("EspId")
                        .HasColumnType("int")
                        .HasColumnName("ESP_ID");

                    b.Property<int>("OfeId")
                        .HasColumnType("int")
                        .HasColumnName("OFE_ID");

                    b.Property<DateTime>("PosFechaPostulacion")
                        .HasColumnType("datetime")
                        .HasColumnName("POS_FECHA_POSTULACION");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PosId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PosId"), false);

                    b.HasIndex(new[] { "EspId" }, "FK_ESTADO_POSTULACION_FK");

                    b.HasIndex(new[] { "OfeId" }, "FK_OFERTAS_POSTULACIONES_FK");

                    b.HasIndex(new[] { "UsuarioId" }, "FK_USUARIOS_POSTULACIONES_FK");

                    b.ToTable("POSTULACIONES", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Provincia", b =>
                {
                    b.Property<int>("ProId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRO_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProId"), 1L, 1);

                    b.Property<string>("ProNombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("PRO_NOMBRE");

                    b.HasKey("ProId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("ProId"), false);

                    b.ToTable("PROVINCIAS", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.PuestoLaboral", b =>
                {
                    b.Property<int>("PulId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PUL_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PulId"), 1L, 1);

                    b.Property<int>("ArlId")
                        .HasColumnType("int")
                        .HasColumnName("ARL_ID");

                    b.Property<string>("PulNombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("PUL_NOMBRE");

                    b.HasKey("PulId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PulId"), false);

                    b.HasIndex(new[] { "ArlId" }, "FK_AREAS_PUESTOS_LABORALES_FK");

                    b.ToTable("PUESTOS_LABORALES", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UsuApellido")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UsuCedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuNombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("UsuarioIdEmpresa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.UsuarioDetalle", b =>
                {
                    b.Property<int>("UsdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USD_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsdId"), 1L, 1);

                    b.Property<string>("UsdCiudad")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("USD_CIUDAD");

                    b.Property<string>("UsdEstadoCivil")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("USD_ESTADO_CIVIL");

                    b.Property<DateTime>("UsdFechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("USD_FECHA_NACIMIENTO");

                    b.Property<string>("UsdFoto")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("USD_FOTO");

                    b.Property<string>("UsdGenero")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("USD_GENERO");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UsdId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("UsdId"), false);

                    b.HasIndex(new[] { "UsuarioId" }, "FK_DETALLES_USUARIO_FK");

                    b.ToTable("USUARIO_DETALLES", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.UsuarioEducacion", b =>
                {
                    b.Property<int>("UseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UseId"), 1L, 1);

                    b.Property<string>("USE_AREA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USE_DOCUMENTO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USE_ESTADO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USE_FECHAF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USE_FECHAI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USE_INSTITUCION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USE_TIPO_FORMACION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USE_TITULO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UseId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("UseId"), false);

                    b.HasIndex(new[] { "UsuarioId" }, "FK_EDUCACION_USUARIO_FK");

                    b.ToTable("USUARIO_EDUCACION", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.UsuarioExperienciaLaboral", b =>
                {
                    b.Property<int>("UsxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USX_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsxId"), 1L, 1);

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsxArea")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("USX_AREA");

                    b.Property<string>("UsxEmpresa")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("USX_EMPRESA");

                    b.Property<DateTime?>("UsxFechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("USX_FECHA_FIN");

                    b.Property<DateTime>("UsxFechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("USX_FECHA_INICIO");

                    b.Property<string>("UsxNivelExperiencia")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("USX_NIVEL_EXPERIENCIA");

                    b.Property<string>("UsxPuesto")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("USX_PUESTO");

                    b.HasKey("UsxId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("UsxId"), false);

                    b.HasIndex(new[] { "UsuarioId" }, "FK_EXPERIENCIA_LABORAL_FK");

                    b.ToTable("USUARIO_EXPERIENCIA_LABORAL", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.UsuarioIdioma", b =>
                {
                    b.Property<int>("IDI_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDI_ID"), 1L, 1);

                    b.Property<string>("IDI_ESCRITO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDI_IDIOMA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDI_ORAL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDI_ID");

                    b.ToTable("USUARIO_IDIOMA", (string)null);
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.UsuarioPerfil", b =>
                {
                    b.Property<int>("UspId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USP_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UspId"), 1L, 1);

                    b.Property<string>("UspAspiracionLarboral")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("USP_ASPIRACION_LARBORAL");

                    b.Property<string>("UspDiscapacidad")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("USP_DISCAPACIDAD");

                    b.Property<string>("UspHojaVida")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("USP_HOJA_VIDA");

                    b.Property<decimal?>("UspPreferenciaSalarial")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("USP_PREFERENCIA_SALARIAL");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UspId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("UspId"), false);

                    b.HasIndex(new[] { "UsuarioId" }, "FK_PERFIL_USUARIO_FK");

                    b.ToTable("USUARIO_PERFIL", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.AeSubdivision", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.AeSectorPrincipal", "Aep")
                        .WithMany("AeSubdivisions")
                        .HasForeignKey("AepId")
                        .IsRequired()
                        .HasConstraintName("FK_AE_SUBDI_FK_SECTOR_AE_SECTO");

                    b.Navigation("Aep");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Ciudad", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Provincia", "Pro")
                        .WithMany("Ciudades")
                        .HasForeignKey("ProId")
                        .IsRequired()
                        .HasConstraintName("FK_CIUDADES_FK_PROVIN_PROVINCI");

                    b.Navigation("Pro");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Empresa", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.AeSectorPrincipal", "Aep")
                        .WithMany("Empresas")
                        .HasForeignKey("AepId")
                        .IsRequired()
                        .HasConstraintName("FK_EMPRESAS_FK_SECTOR_AE_SECTO");

                    b.Navigation("Aep");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Oferta", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.AreaLaboral", "Arl")
                        .WithMany("Oferta")
                        .HasForeignKey("ArlId")
                        .IsRequired()
                        .HasConstraintName("FK_OFERTAS_FK_OFERTA_AREAS_LA");

                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Ciudad", "Cid")
                        .WithMany("Oferta")
                        .HasForeignKey("CidId")
                        .IsRequired()
                        .HasConstraintName("FK_OFERTAS_FK_OFERTA_CIUDADES");

                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Empresa", "Emp")
                        .WithMany("Oferta")
                        .HasForeignKey("EmpId")
                        .IsRequired()
                        .HasConstraintName("FK_OFERTAS_FK_EMPRES_EMPRESAS");

                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.OfertaModalidad", "Ofm")
                        .WithMany("Oferta")
                        .HasForeignKey("OfmId")
                        .IsRequired()
                        .HasConstraintName("FK_OFERTAS_FK_OFERTA_OFERTA_M");

                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Provincia", "Pro")
                        .WithMany("Ofertas")
                        .HasForeignKey("ProId")
                        .IsRequired()
                        .HasConstraintName("FK_OFERTAS_FK_PROVINCIAS");

                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.PuestoLaboral", "Pul")
                        .WithMany("Oferta")
                        .HasForeignKey("PulId")
                        .IsRequired()
                        .HasConstraintName("FK_OFERTAS_FK_OFERTA_PUESTOS_");

                    b.Navigation("Arl");

                    b.Navigation("Cid");

                    b.Navigation("Emp");

                    b.Navigation("Ofm");

                    b.Navigation("Pro");

                    b.Navigation("Pul");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Postulacion", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.EstadoPostulacion", "Esp")
                        .WithMany("Postulaciones")
                        .HasForeignKey("EspId")
                        .IsRequired()
                        .HasConstraintName("FK_POSTULAC_FK_ESTADO_ESTADO_P");

                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Oferta", "Ofe")
                        .WithMany("Postulaciones")
                        .HasForeignKey("OfeId")
                        .IsRequired()
                        .HasConstraintName("FK_POSTULAC_FK_OFERTA_OFERTAS");

                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Usuario", "Usu")
                        .WithMany("Postulaciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_POSTULAC_FK_USUARI_USUARIOS");

                    b.Navigation("Esp");

                    b.Navigation("Ofe");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.PuestoLaboral", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.AreaLaboral", "Arl")
                        .WithMany("PuestosLaborales")
                        .HasForeignKey("ArlId")
                        .IsRequired()
                        .HasConstraintName("FK_PUESTOS__FK_AREAS__AREAS_LA");

                    b.Navigation("Arl");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.UsuarioDetalle", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Usuario", "Usu")
                        .WithMany("UsuarioDetalles")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_USUARIO__FK_DETALL_USUARIOS");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.UsuarioEducacion", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Usuario", "Usu")
                        .WithMany("UsuarioEducacions")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_USUARIO__FK_EDUCAC_USUARIOS");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.UsuarioExperienciaLaboral", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Usuario", "Usu")
                        .WithMany("UsuarioExperienciaLaborals")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_USUARIO__FK_EXPERI_USUARIOS");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.UsuarioPerfil", b =>
                {
                    b.HasOne("PI_Postulacion_Oferta_Trabajos.Models.Usuario", "Usu")
                        .WithMany("UsuarioPerfils")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_USUARIO__FK_PERFIL_USUARIOS");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.AeSectorPrincipal", b =>
                {
                    b.Navigation("AeSubdivisions");

                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.AreaLaboral", b =>
                {
                    b.Navigation("Oferta");

                    b.Navigation("PuestosLaborales");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Ciudad", b =>
                {
                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Empresa", b =>
                {
                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.EstadoPostulacion", b =>
                {
                    b.Navigation("Postulaciones");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Oferta", b =>
                {
                    b.Navigation("Postulaciones");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.OfertaModalidad", b =>
                {
                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Provincia", b =>
                {
                    b.Navigation("Ciudades");

                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.PuestoLaboral", b =>
                {
                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("PI_Postulacion_Oferta_Trabajos.Models.Usuario", b =>
                {
                    b.Navigation("Postulaciones");

                    b.Navigation("UsuarioDetalles");

                    b.Navigation("UsuarioEducacions");

                    b.Navigation("UsuarioExperienciaLaborals");

                    b.Navigation("UsuarioPerfils");
                });
#pragma warning restore 612, 618
        }
    }
}
